{"Data":[{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Account","MethodName":"getId","MethodSourceCode":"@Id\n@GeneratedValue(strategy = GenerationType.AUTO)\npublic Long getId() {\n    return id;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Account","MethodName":"setId","MethodSourceCode":"public void setId(Long id) {\n    this.id = id;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Account","MethodName":"getUserId","MethodSourceCode":"public String getUserId() {\n    return userId;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["userId"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Account","MethodName":"setUserId","MethodSourceCode":"public void setUserId(String userId) {\n    this.userId = userId;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Account","MethodName":"getAccountNumber","MethodSourceCode":"public String getAccountNumber() {\n    return accountNumber;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["accountNumber"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Account","MethodName":"setAccountNumber","MethodSourceCode":"public void setAccountNumber(String accountNumber) {\n    this.accountNumber = accountNumber;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Account","MethodName":"getDefaultAccount","MethodSourceCode":"public Boolean getDefaultAccount() {\n    return defaultAccount;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["defaultAccount"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Account","MethodName":"setDefaultAccount","MethodSourceCode":"public void setDefaultAccount(Boolean defaultAccount) {\n    this.defaultAccount = defaultAccount;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Account","MethodName":"getCreditCards","MethodSourceCode":"@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER)\npublic Set<CreditCard> getCreditCards() {\n    return creditCards;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["creditCards"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Account","MethodName":"setCreditCards","MethodSourceCode":"public void setCreditCards(Set<CreditCard> creditCards) {\n    this.creditCards = creditCards;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Account","MethodName":"getAddresses","MethodSourceCode":"@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER)\npublic Set<Address> getAddresses() {\n    return addresses;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["addresses"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Account","MethodName":"setAddresses","MethodSourceCode":"public void setAddresses(Set<Address> addresses) {\n    this.addresses = addresses;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Account","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"Account{\" + \"id=\" + id + \", userId='\" + userId + '\\'' + \", accountNumber='\" + accountNumber + '\\'' + \", defaultAccount=\" + defaultAccount + \", creditCards=\" + creditCards + \", addresses=\" + addresses + '}';\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["userId"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"AccountRepository","MethodName":"findAccountsByUserId","MethodSourceCode":"List<Account> findAccountsByUserId(@Param(\"userId\") String userId);","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["args"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"AccountServiceApplication","MethodName":"main","MethodSourceCode":"public static void main(String[] args) {\n    SpringApplication.run(AccountServiceApplication.class, args);\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["details","context"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"AccountServiceApplication","MethodName":"loadBalancedRestTemplate","MethodSourceCode":"@LoadBalanced\n@Bean\npublic OAuth2RestTemplate loadBalancedRestTemplate(OAuth2ProtectedResourceDetails details, OAuth2ClientContext context) {\n    return new OAuth2RestTemplate(details, context);\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["config"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"AccountServiceApplication","MethodName":"configureRepositoryRestConfiguration","MethodSourceCode":"@Override\npublic void configureRepositoryRestConfiguration(RepositoryRestConfiguration config) {\n    config.setBasePath(\"/api\");\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["databaseInitializer"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"AccountServiceApplication","MethodName":"commandLineRunner","MethodSourceCode":"@Bean\n@Profile(\"dev\")\nCommandLineRunner commandLineRunner(DatabaseInitializer databaseInitializer) {\n    return args -> {\n        // Initialize the database for end to end integration testing\n        databaseInitializer.populate();\n    };\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getId","MethodSourceCode":"public Long getId() {\n    return id;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setId","MethodSourceCode":"public void setId(Long id) {\n    this.id = id;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getCountry","MethodSourceCode":"public String getCountry() {\n    return country;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["country"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setCountry","MethodSourceCode":"public void setCountry(String country) {\n    this.country = country;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getProvince","MethodSourceCode":"public String getProvince() {\n    return province;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["province"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setProvince","MethodSourceCode":"public void setProvince(String province) {\n    this.province = province;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getCity","MethodSourceCode":"public String getCity() {\n    return city;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["city"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setCity","MethodSourceCode":"public void setCity(String city) {\n    this.city = city;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getDistrict","MethodSourceCode":"public String getDistrict() {\n    return district;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["district"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setDistrict","MethodSourceCode":"public void setDistrict(String district) {\n    this.district = district;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getStreet1","MethodSourceCode":"public String getStreet1() {\n    return street1;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["street1"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setStreet1","MethodSourceCode":"public void setStreet1(String street1) {\n    this.street1 = street1;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getStreet2","MethodSourceCode":"public String getStreet2() {\n    return street2;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["street2"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setStreet2","MethodSourceCode":"public void setStreet2(String street2) {\n    this.street2 = street2;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getZipCode","MethodSourceCode":"public Integer getZipCode() {\n    return zipCode;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["zipCode"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setZipCode","MethodSourceCode":"public void setZipCode(Integer zipCode) {\n    this.zipCode = zipCode;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getAddressType","MethodSourceCode":"public AddressType getAddressType() {\n    return addressType;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["addressType"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setAddressType","MethodSourceCode":"public void setAddressType(AddressType addressType) {\n    this.addressType = addressType;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"Address{\" + \"id=\" + id + \", country='\" + country + '\\'' + \", province='\" + province + '\\'' + \", city='\" + city + '\\'' + \", district='\" + district + '\\'' + \", street1='\" + street1 + '\\'' + \", street2='\" + street2 + '\\'' + \", zipCode=\" + zipCode + \", addressType=\" + addressType + '}';\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"AccountControllerV1","MethodName":"getUserAccounts","MethodSourceCode":"@RequestMapping(value = \"accounts\", method = RequestMethod.GET)\npublic ResponseEntity<List<Account>> getUserAccounts() throws Exception {\n    return Optional.ofNullable(accountService.getUserAccount()).map(account -> new ResponseEntity<>(account, HttpStatus.OK)).orElseThrow(() -> new Exception(\"用户账户不存在\"));\n}","Folder":"account-service"},{"Variables":[{"VariableName":"accounts"},{"VariableName":"user"}],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"AccountServiceV1","MethodName":"getUserAccount","MethodSourceCode":"public List<Account> getUserAccount() {\n    List<Account> accounts = null;\n    User user = oAuth2RestTemplate.getForObject(\"http://user-service/auth/v1/me\", User.class);\n    if (user != null) {\n        // 用户名作为userId是合理的，因为登录时使用的用户名是唯一的\n        accounts = accountRepository.findAccountsByUserId(user.getUsername());\n    }\n    // 掩盖信用卡除最后四位以外的数字\n    if (accounts != null) {\n        accounts.forEach(account -> account.getCreditCards().forEach(creditCard -> creditCard.setNumber(creditCard.getNumber().replaceAll(\"[\\\\d]{4}(?!$)\", \"****-\"))));\n    }\n    return accounts;\n}","Folder":"account-service"},{"Variables":[{"VariableName":"account"},{"VariableName":"addresses"},{"VariableName":"address"},{"VariableName":"creditCards"},{"VariableName":"creditCard"},{"VariableName":"customer"}],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"DatabaseInitializer","MethodName":"populate","MethodSourceCode":"public void populate() {\n    // 清除已有数据\n    // Customer有一个外键引用Account，因此需要先删除Customer，然后才删除Account\n    customerRepository.deleteAll();\n    accountRepository.deleteAll();\n    Account account = new Account(\"user\", \"12345\");\n    account.setDefaultAccount(true);\n    Set<Address> addresses = new HashSet<>();\n    Address address = new Address(\"中国\", \"云南\", \"丽江\", \"古城区\", \"street1\", \"street2\", 000000, AddressType.SHIPPING);\n    addresses.add(address);\n    account.setAddresses(addresses);\n    Set<CreditCard> creditCards = new HashSet<>();\n    CreditCard creditCard = new CreditCard(\"6666666666666666\", CreditCardType.VISA);\n    creditCards.add(creditCard);\n    account.setCreditCards(creditCards);\n    // account = accountRepository.save(account); // spring data save方法的jpa实现是 EntityManager.persist方法，该方法不能persist detached entity, EntityManager.merge方法可以，但spring data jpa 未采用，所以 不单独保存，而是放到保存customer时使用级联保存。\n    // 创建一个customer\n    Customer customer = new Customer(\"Time\", \"Yang\", \"timeyang@timeyang.com\", account);\n    customerRepository.save(customer);\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CreditCard","MethodName":"getId","MethodSourceCode":"@Id\n@GeneratedValue(strategy = GenerationType.AUTO)\npublic Long getId() {\n    return id;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CreditCard","MethodName":"setId","MethodSourceCode":"public void setId(Long id) {\n    this.id = id;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CreditCard","MethodName":"getNumber","MethodSourceCode":"public String getNumber() {\n    return number;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["number"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CreditCard","MethodName":"setNumber","MethodSourceCode":"public void setNumber(String number) {\n    this.number = number;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CreditCard","MethodName":"getType","MethodSourceCode":"public CreditCardType getType() {\n    return type;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["type"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CreditCard","MethodName":"setType","MethodSourceCode":"public void setType(CreditCardType type) {\n    this.type = type;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CreditCard","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"CreditCard{\" + \"id=\" + id + \", number='\" + number + '\\'' + \", type=\" + type + '}';\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Customer","MethodName":"getId","MethodSourceCode":"public Long getId() {\n    return id;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Customer","MethodName":"setId","MethodSourceCode":"public void setId(Long id) {\n    this.id = id;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Customer","MethodName":"getFirstName","MethodSourceCode":"public String getFirstName() {\n    return firstName;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["firstName"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Customer","MethodName":"setFirstName","MethodSourceCode":"public void setFirstName(String firstName) {\n    this.firstName = firstName;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Customer","MethodName":"getLastName","MethodSourceCode":"public String getLastName() {\n    return lastName;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["lastName"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Customer","MethodName":"setLastName","MethodSourceCode":"public void setLastName(String lastName) {\n    this.lastName = lastName;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Customer","MethodName":"getEmail","MethodSourceCode":"public String getEmail() {\n    return email;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["email"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Customer","MethodName":"setEmail","MethodSourceCode":"public void setEmail(String email) {\n    this.email = email;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Customer","MethodName":"getAccount","MethodSourceCode":"public Account getAccount() {\n    return account;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["account"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Customer","MethodName":"setAccount","MethodSourceCode":"public void setAccount(Account account) {\n    this.account = account;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Customer","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"Customer{\" + \"id=\" + id + \", firstName='\" + firstName + '\\'' + \", lastName='\" + lastName + '\\'' + \", email='\" + email + '\\'' + \", account=\" + account + '}';\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BaseEntity","MethodName":"getCreatedAt","MethodSourceCode":"public Long getCreatedAt() {\n    return createdAt;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["createdAt"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BaseEntity","MethodName":"setCreatedAt","MethodSourceCode":"public void setCreatedAt(Long createdAt) {\n    this.createdAt = createdAt;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BaseEntity","MethodName":"getLastModified","MethodSourceCode":"public Long getLastModified() {\n    return lastModified;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["lastModified"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BaseEntity","MethodName":"setLastModified","MethodSourceCode":"public void setLastModified(Long lastModified) {\n    this.lastModified = lastModified;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BaseEntity","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"BaseEntity{\" + \"createdAt=\" + createdAt + \", lastModified=\" + lastModified + '}';\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"getId","MethodSourceCode":"public Long getId() {\n    return id;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"setId","MethodSourceCode":"public void setId(Long id) {\n    this.id = id;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"getUsername","MethodSourceCode":"public String getUsername() {\n    return username;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["username"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"setUsername","MethodSourceCode":"public void setUsername(String username) {\n    this.username = username;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"getFirstName","MethodSourceCode":"public String getFirstName() {\n    return firstName;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["firstName"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"setFirstName","MethodSourceCode":"public void setFirstName(String firstName) {\n    this.firstName = firstName;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"getLastName","MethodSourceCode":"public String getLastName() {\n    return lastName;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["lastName"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"setLastName","MethodSourceCode":"public void setLastName(String lastName) {\n    this.lastName = lastName;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"getCreatedAt","MethodSourceCode":"public Long getCreatedAt() {\n    return createdAt;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["createdAt"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"setCreatedAt","MethodSourceCode":"public void setCreatedAt(Long createdAt) {\n    this.createdAt = createdAt;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"getLastModified","MethodSourceCode":"public Long getLastModified() {\n    return lastModified;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":["lastModified"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"setLastModified","MethodSourceCode":"public void setLastModified(Long lastModified) {\n    this.lastModified = lastModified;\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"User{\" + \"id=\" + id + \", username='\" + username + '\\'' + \", firstName='\" + firstName + '\\'' + \", lastName='\" + lastName + '\\'' + \", createdAt=\" + createdAt + \", lastModified=\" + lastModified + '}';\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"DatabaseInitializerTest","MethodName":"test","MethodSourceCode":"@Test\npublic void test() {\n    databaseInitializer.populate();\n    System.out.println(accountRepository.findAll());\n    System.out.println(customerRepository.findAll());\n}","Folder":"account-service"},{"Variables":[],"Methodscalled":[{"MethodCalled":"getCatalog"}],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CatalogControllerV1","MethodName":"getCatalog","MethodSourceCode":"@RequestMapping(value = \"/catalog\", method = RequestMethod.GET, name = \"getCatalog\")\npublic ResponseEntity<Catalog> getCatalog() {\n    return Optional.ofNullable(catalogService.getCatalog()).map(result -> new ResponseEntity<>(result, HttpStatus.OK)).orElse(new ResponseEntity<>(HttpStatus.NOT_FOUND));\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[{"MethodCalled":"getProduct"}],"Parameters":["productId"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CatalogControllerV1","MethodName":"getProduct","MethodSourceCode":"@RequestMapping(value = \"/products/{productId}\", method = RequestMethod.GET, name = \"getProduct\")\npublic ResponseEntity<Product> getProduct(@PathVariable(\"productId\") String productId) {\n    return Optional.ofNullable(catalogService.getProduct(productId)).map(result -> new ResponseEntity<>(result, HttpStatus.OK)).orElse(new ResponseEntity<>(HttpStatus.NOT_FOUND));\n}","Folder":"catalog-service"},{"Variables":[{"VariableName":"activeCatalogInfo"},{"VariableName":"catalog"},{"VariableName":"products"}],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CatalogServiceV1","MethodName":"getCatalog","MethodSourceCode":"@HystrixCommand\npublic Catalog getCatalog() {\n    CatalogInfo activeCatalogInfo = catalogInfoRepository.findCatalogInfoByActive(true);\n    Catalog catalog = restTemplate.getForObject(String.format(\"http://inventory-service/api/catalogs/search/findCatalogByCatalogNumber?catalogNumber=%s\", activeCatalogInfo.getCatalogId()), Catalog.class);\n    ProductResource products = restTemplate.getForObject(String.format(\"http://inventory-service/api/catalogs/%s/products\", catalog.getId()), ProductResource.class);\n    catalog.setProducts(products.getContent().stream().collect(Collectors.toSet()));\n    return catalog;\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":["productId"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CatalogServiceV1","MethodName":"getProduct","MethodSourceCode":"@HystrixCommand\npublic Product getProduct(String productId) {\n    return restTemplate.getForObject(String.format(\"http://inventory-service/v1/products/%s\", productId), Product.class);\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Catalog","MethodName":"getId","MethodSourceCode":"public Long getId() {\n    return id;\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Catalog","MethodName":"setId","MethodSourceCode":"public void setId(Long id) {\n    this.id = id;\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Catalog","MethodName":"getCatalogNumber","MethodSourceCode":"public Long getCatalogNumber() {\n    return catalogNumber;\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":["catalogNumber"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Catalog","MethodName":"setCatalogNumber","MethodSourceCode":"public void setCatalogNumber(Long catalogNumber) {\n    this.catalogNumber = catalogNumber;\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Catalog","MethodName":"getProducts","MethodSourceCode":"public Set<Product> getProducts() {\n    return products;\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":["products"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Catalog","MethodName":"setProducts","MethodSourceCode":"public void setProducts(Set<Product> products) {\n    this.products = products;\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Catalog","MethodName":"getName","MethodSourceCode":"public String getName() {\n    return name;\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":["name"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Catalog","MethodName":"setName","MethodSourceCode":"public void setName(String name) {\n    this.name = name;\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Catalog","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"Catalog{\" + \"id=\" + id + \", catalogNumber=\" + catalogNumber + \", name='\" + name + '\\'' + '}';\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CatalogInfo","MethodName":"getId","MethodSourceCode":"public String getId() {\n    return id;\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CatalogInfo","MethodName":"setId","MethodSourceCode":"public void setId(String id) {\n    this.id = id;\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CatalogInfo","MethodName":"getCatalogId","MethodSourceCode":"public Long getCatalogId() {\n    return catalogId;\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":["catalogId"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CatalogInfo","MethodName":"setCatalogId","MethodSourceCode":"public void setCatalogId(Long catalogId) {\n    this.catalogId = catalogId;\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CatalogInfo","MethodName":"getActive","MethodSourceCode":"public Boolean getActive() {\n    return active;\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":["active"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CatalogInfo","MethodName":"setActive","MethodSourceCode":"public void setActive(Boolean active) {\n    this.active = active;\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CatalogInfo","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"CatalogInfo{\" + \"id='\" + id + '\\'' + \", catalogId=\" + catalogId + \", active=\" + active + '}';\n}","Folder":"catalog-service"},{"Variables":[{"VariableName":"that"}],"Methodscalled":[{"MethodCalled":"equals"},{"MethodCalled":"equals"},{"MethodCalled":"equals"}],"Parameters":["obj"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CatalogInfo","MethodName":"equals","MethodSourceCode":"@Override\npublic boolean equals(Object obj) {\n    if (this == obj)\n        return true;\n    if (obj == null || getClass() != obj.getClass())\n        return false;\n    CatalogInfo that = (CatalogInfo) obj;\n    if (id != null ? !id.equals(that.id) : that.id != null)\n        return false;\n    if (catalogId != null ? !catalogId.equals(that.catalogId) : that.catalogId != null)\n        return false;\n    return active != null ? active.equals(that.active) : that.active == null;\n}","Folder":"catalog-service"},{"Variables":[{"VariableName":"result"}],"Methodscalled":[{"MethodCalled":"hashCode"},{"MethodCalled":"hashCode"},{"MethodCalled":"hashCode"}],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CatalogInfo","MethodName":"hashCode","MethodSourceCode":"@Override\npublic int hashCode() {\n    int result = id != null ? id.hashCode() : 0;\n    result = 31 * result + (catalogId != null ? catalogId.hashCode() : 0);\n    result = 31 * result + (active != null ? active.hashCode() : 0);\n    return result;\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":["active"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CatalogInfoRepository","MethodName":"findCatalogInfoByActive","MethodSourceCode":"CatalogInfo findCatalogInfoByActive(@Param(\"active\") Boolean active);","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":["args"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CatalogServiceApplication","MethodName":"main","MethodSourceCode":"public static void main(String[] args) {\n    SpringApplication.run(CatalogServiceApplication.class, args);\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CatalogServiceApplication","MethodName":"loadRestTemplate","MethodSourceCode":"@Bean\n@LoadBalanced\npublic RestTemplate loadRestTemplate() {\n    return new RestTemplate();\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"getId","MethodSourceCode":"public Long getId() {\n    return id;\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"setId","MethodSourceCode":"public void setId(Long id) {\n    this.id = id;\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"getName","MethodSourceCode":"public String getName() {\n    return name;\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":["name"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"setName","MethodSourceCode":"public void setName(String name) {\n    this.name = name;\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"getProductId","MethodSourceCode":"public String getProductId() {\n    return productId;\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":["productId"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"setProductId","MethodSourceCode":"public void setProductId(String productId) {\n    this.productId = productId;\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"getDescription","MethodSourceCode":"public String getDescription() {\n    return description;\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":["description"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"setDescription","MethodSourceCode":"public void setDescription(String description) {\n    this.description = description;\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"getUnitPrice","MethodSourceCode":"public Double getUnitPrice() {\n    return unitPrice;\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":["unitPrice"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"setUnitPrice","MethodSourceCode":"public void setUnitPrice(Double unitPrice) {\n    this.unitPrice = unitPrice;\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"getInStock","MethodSourceCode":"public Boolean getInStock() {\n    return inStock;\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":["inStock"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"setInStock","MethodSourceCode":"public void setInStock(Boolean inStock) {\n    this.inStock = inStock;\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"Product{\" + \"id=\" + id + \", name='\" + name + '\\'' + \", productId='\" + productId + '\\'' + \", description='\" + description + '\\'' + \", unitPrice=\" + unitPrice + \", inStock=\" + inStock + '}';\n}","Folder":"catalog-service"},{"Variables":[],"Methodscalled":[],"Parameters":["args"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"ConfigServiceApplication","MethodName":"main","MethodSourceCode":"public static void main(String[] args) {\n    SpringApplication.run(ConfigServiceApplication.class, args);\n}","Folder":"config-service"},{"Variables":[],"Methodscalled":[],"Parameters":["args"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"DiscoveryServiceApplication","MethodName":"main","MethodSourceCode":"public static void main(String[] args) {\n    SpringApplication.run(DiscoveryServiceApplication.class, args);\n}","Folder":"discovery-service"},{"Variables":[],"Methodscalled":[],"Parameters":["args"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"EdgeServiceApplication","MethodName":"main","MethodSourceCode":"public static void main(String[] args) {\n    SpringApplication.run(EdgeServiceApplication.class, args);\n}","Folder":"edge-service"},{"Variables":[],"Methodscalled":[],"Parameters":["args"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"HystrixDashboardAppilcation","MethodName":"main","MethodSourceCode":"public static void main(String[] args) {\n    SpringApplication.run(HystrixDashboardAppilcation.class, args);\n}","Folder":"hystrix-dashboard"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getId","MethodSourceCode":"public Long getId() {\n    return id;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setId","MethodSourceCode":"public void setId(Long id) {\n    this.id = id;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getCountry","MethodSourceCode":"public String getCountry() {\n    return country;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["country"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setCountry","MethodSourceCode":"public void setCountry(String country) {\n    this.country = country;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getProvince","MethodSourceCode":"public String getProvince() {\n    return province;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["province"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setProvince","MethodSourceCode":"public void setProvince(String province) {\n    this.province = province;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getCity","MethodSourceCode":"public String getCity() {\n    return city;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["city"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setCity","MethodSourceCode":"public void setCity(String city) {\n    this.city = city;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getDistrict","MethodSourceCode":"public String getDistrict() {\n    return district;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["district"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setDistrict","MethodSourceCode":"public void setDistrict(String district) {\n    this.district = district;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getStreet1","MethodSourceCode":"public String getStreet1() {\n    return street1;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["street1"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setStreet1","MethodSourceCode":"public void setStreet1(String street1) {\n    this.street1 = street1;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getStreet2","MethodSourceCode":"public String getStreet2() {\n    return street2;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["street2"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setStreet2","MethodSourceCode":"public void setStreet2(String street2) {\n    this.street2 = street2;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getZipCode","MethodSourceCode":"public Integer getZipCode() {\n    return zipCode;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["zipCode"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setZipCode","MethodSourceCode":"public void setZipCode(Integer zipCode) {\n    this.zipCode = zipCode;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"Address{\" + \"id=\" + id + \", country='\" + country + '\\'' + \", province='\" + province + '\\'' + \", city='\" + city + '\\'' + \", district='\" + district + '\\'' + \", street1='\" + street1 + '\\'' + \", street2='\" + street2 + '\\'' + \", zipCode=\" + zipCode + '}';\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[{"MethodCalled":"getProduct"}],"Parameters":["productId"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"InventoryControllerV1","MethodName":"getProduct","MethodSourceCode":"@RequestMapping(value = \"/products/{productId}\", method = RequestMethod.GET, name = \"getProduct\")\npublic ResponseEntity<Product> getProduct(@PathVariable(\"productId\") String productId) {\n    return Optional.ofNullable((inventoryService.getProduct(productId))).map(result -> new ResponseEntity<>(result, HttpStatus.OK)).orElse(new ResponseEntity<>(HttpStatus.NOT_FOUND));\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[{"MethodCalled":"getAvailableInventoryForProductIds"}],"Parameters":["productIds"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"InventoryControllerV1","MethodName":"getAvailableInventoryForProductIds","MethodSourceCode":"@RequestMapping(value = \"/inventory\", method = RequestMethod.GET, name = \"getAvailableInventoryForProductIds\")\npublic ResponseEntity<List<Inventory>> getAvailableInventoryForProductIds(@RequestParam(\"productIds\") String productIds) {\n    return Optional.ofNullable(inventoryService.getAvailableInventoryForProductIds(productIds)).map(result -> new ResponseEntity<>(result, HttpStatus.OK)).orElse(new ResponseEntity<>(HttpStatus.NOT_FOUND));\n}","Folder":"inventory-service"},{"Variables":[{"VariableName":"product"},{"VariableName":"availableInventory"}],"Methodscalled":[],"Parameters":["productId"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"InventoryServiceV1","MethodName":"getProduct","MethodSourceCode":"@HystrixCommand(fallbackMethod = \"getProductFallback\")\npublic Product getProduct(String productId) {\n    Product product = productRepository.getProductByProductId(productId);\n    if (product != null) {\n        Stream<Inventory> availableInventory = inventoryRepository.getAvailableInventory(productId).stream();\n        product.setInStock(availableInventory.findAny().isPresent());\n    }\n    return product;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["productId"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"InventoryServiceV1","MethodName":"getProductFallback","MethodSourceCode":"private Product getProductFallback(String productId) {\n    return null;\n}","Folder":"inventory-service"},{"Variables":[{"VariableName":"inventories"}],"Methodscalled":[{"MethodCalled":"getAvailableInventoryForProductIds"}],"Parameters":["productIds"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"InventoryServiceV1","MethodName":"getAvailableInventoryForProductIds","MethodSourceCode":"public List<Inventory> getAvailableInventoryForProductIds(String productIds) {\n    List<Inventory> inventories = inventoryRepository.getAvailableInventoryForProductIds(productIds.split(\",\"));\n    return neo4jTemplate.loadAll(inventories, 1).stream().collect(Collectors.toList());\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Catalog","MethodName":"getId","MethodSourceCode":"public Long getId() {\n    return id;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Catalog","MethodName":"setId","MethodSourceCode":"public void setId(Long id) {\n    this.id = id;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Catalog","MethodName":"getCatalogNumber","MethodSourceCode":"public Long getCatalogNumber() {\n    return catalogNumber;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["catalogNumber"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Catalog","MethodName":"setCatalogNumber","MethodSourceCode":"public void setCatalogNumber(Long catalogNumber) {\n    this.catalogNumber = catalogNumber;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Catalog","MethodName":"getProducts","MethodSourceCode":"public List<Product> getProducts() {\n    return products;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["products"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Catalog","MethodName":"setProducts","MethodSourceCode":"public void setProducts(List<Product> products) {\n    this.products = products;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Catalog","MethodName":"getName","MethodSourceCode":"public String getName() {\n    return name;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["name"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Catalog","MethodName":"setName","MethodSourceCode":"public void setName(String name) {\n    this.name = name;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Catalog","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"Catalog{\" + \"id=\" + id + \", catalogNumber=\" + catalogNumber + \", products=\" + products + \", name='\" + name + '\\'' + '}';\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["catalogNumber"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CatalogRepository","MethodName":"findCatalogByCatalogNumber","MethodSourceCode":"Catalog findCatalogByCatalogNumber(@Param(\"catalogNumber\") Long catalogNumber);","Folder":"inventory-service"},{"Variables":[{"VariableName":"products"},{"VariableName":"catalog"},{"VariableName":"warehouseAddress"},{"VariableName":"shipToAddress"},{"VariableName":"warehouse"},{"VariableName":"finalWarehouse"},{"VariableName":"random"},{"VariableName":"inventories"},{"VariableName":"i"},{"VariableName":"shipment"}],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"DatabaseInitializer","MethodName":"populate","MethodSourceCode":"public void populate() throws Exception {\n    // 删除所有边和节点\n    neo4jConfiguration.getSession().query(\"MATCH (n) OPTIONAL MATCH (n)-[r]-() DELETE n, r;\", new HashMap<>()).queryResults();\n    List<Product> products = Arrays.asList(new Product(\"巴黎\", \"PD-00001\", \"<p>法国是欧洲浪漫的中心，它悠久历史、具有丰富文化内涵的名胜古迹及乡野风光吸引着世界各地的旅游者。风情万种的花都巴黎，美丽迷人的蓝色海岸，阿尔卑斯山的滑雪场等都是令人神往的旅游胜地 <\/p>\", 9999.0), new Product(\"马尔代夫\", \"PD-00002\", \"<p>马尔代夫位于斯里兰卡南方的海域里，被称为印度洋上人间最后的乐园。<strong>马尔代夫由露出水面及部分露出水面的大大小小千余个珊瑚岛组成。<\/strong><br>\" + \"<em>马尔代夫 蜜月与爱人情陷天堂岛<\/em><\/p>\", 29999.0), new Product(\"印度尼西亚，巴厘岛\", \"PD-00003\", \"<p>　　它是南太平洋最美丽的景点之一。居住在这里的热情人们让巴厘岛是如此的特别。从肉饼饭到火山，再到古朴的巴厘岛村落，巴厘岛一定是你终身难忘的旅程。<\/p>\", 29999.0), new Product(\"法国，普罗旺斯\", \"PD-00004\", \"<p>它已不再是一个单纯的地域名称，更代表了一种简单无忧、轻松慵懒的生活方式，一种宠辱不惊，看庭前花开花落；去留无意，望天上云卷云舒的闲适意境。<strong>如果旅行是为了摆脱生活的桎梏，普罗旺斯会让你忘掉一切。<\/strong><\/p>\", 9999.0), new Product(\"捷克共和国，布拉格\", \"PD-00005\", \"<p><em>布拉格是保存最完整的中世纪城市之一。<\/em>它一定是任何旅游名单上的必去之地。不要错过夜晚的城堡美景。城堡在灯光的映衬之下显得尤为壮观。<\/p>\", 9999.0), new Product(\"维多利亚瀑布\", \"PD-00006\", \"维多利亚瀑布，又称莫西奥图尼亚瀑布，位于非洲赞比西河中游，赞比亚与津巴布韦接壤处。宽1,700多米(5,500多英尺)，最高处108米(355英尺)，为世界著名瀑布奇观之一。<br/>维多利亚瀑布由\u2018魔鬼瀑布\u2019、\u2018马蹄瀑布\u2019、\u2018彩虹瀑布\u2019、\u2018主瀑布\u2019及\u2018东瀑布\u2019共五道宽达百米的大瀑布组成<p><em>你站在瀑布边缘，看着瀑布一泻而下，发出如雷般的轰鸣，<strong>你无论如何大喊大叫，都听不到自己的声音，你的肾上腺素在体内涌动，你似乎体会到了临近死亡的感觉。<\/strong><\/em><\/p>\", 13999.0), new Product(\"泰姬陵\", \"PD-00007\", \"泰姬陵（印地语：ताज महल，乌尔都语：تاج محل\\u200E），是位于印度北方邦阿格拉的一座用白色大理石建造的陵墓，是印度知名度最高的古迹之一。<p>它是<em>莫卧儿王朝第5代皇帝沙贾汗<\/em>为了<strong>纪念他的第二任妻子已故皇后姬蔓·芭奴而兴建的陵墓<\/strong>，竣工于1654年。泰姬陵被广泛认为是\u201c印度穆斯林艺术的珍宝和世界遗产中被广泛赞美的杰作之一\u201d<\/p>\", 13999.0), new Product(\"大堡礁\", \"PD-00008\", \"大堡礁（The Great Barrier Reef），是世界最大最长的珊瑚礁群，位于南半球，它纵贯于澳洲的东北沿海，北从托雷斯海峡，南到南回归线以南，绵延伸展共有2011公里，最宽处161公里。有2900个大小珊瑚礁岛，自然景观非常特殊。这里自然条件适宜，无大风大浪，成了多种鱼类的栖息地，而在那里不同的月份还能看到不同的水生珍稀动物，让游客大饱眼福。\" + \"<p><em>在落潮时，部分的珊瑚礁露出水面形成珊瑚岛。在礁群与海岸之间是一条极方便的交通海路。<strong>风平浪静时，游船在此间通过，船下连绵不断的多彩、多形的珊瑚景色，就成为吸引世界各地游客来猎奇观赏的最佳海底奇观。<\/strong><\/em>大堡礁属热带气候，主要受南半球气流控制。<\/p>\", 13999.0));\n    productRepository.save(products);\n    Catalog catalog = new Catalog(0L, \"测试目录1\");\n    catalog.getProducts().addAll(products);\n    catalogRepository.save(catalog);\n    Address warehouseAddress = new Address(\"中国\", \"云南\", \"丽江\", \"古城区\", \"street1\", \"street2\", 000000);\n    Address shipToAddress = new Address(\"中国\", \"海南省\", \"三亚\", \"天涯区\", \"street1\", \"street2\", 000001);\n    addressRepository.save(Arrays.asList(warehouseAddress, shipToAddress));\n    Warehouse warehouse = new Warehouse(\"测试仓库1\");\n    warehouse.setAddress(warehouseAddress);\n    warehouse = warehouseRepository.save(warehouse);\n    Warehouse finalWarehouse = warehouse;\n    // 创建一个有着随机库存编号的库存集合。即为每个产品生成一个产品数量为1的库存，有着随机库存编号\n    Random random = new Random();\n    Set<Inventory> inventories = products.stream().map(product -> new Inventory(IntStream.range(0, 9).mapToObj(i -> Integer.toString(random.nextInt(9))).collect(Collectors.joining(\"\")), product, finalWarehouse, InventoryStatus.IN_STOCK)).collect(Collectors.toSet());\n    inventoryRepository.save(inventories);\n    // 为每个产品生成10个额外库存。因为一个库存代表一个数量为1的产品，所以每个产品将有10个库存\n    for (int i = 0; i < 10; i++) {\n        inventoryRepository.save(products.stream().map(product -> new Inventory(IntStream.range(0, 9).mapToObj(x -> Integer.toString(random.nextInt(9))).collect(Collectors.joining(\"\")), product, finalWarehouse, InventoryStatus.IN_STOCK)).collect(Collectors.toSet()));\n    }\n    Shipment shipment = new Shipment(inventories, shipToAddress, warehouse, ShipmentStatus.SHIPPED);\n    shipmentRepository.save(shipment);\n}","Folder":"inventory-service"},{"Variables":[{"VariableName":"packageClasses"},{"VariableName":"packageNames"}],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"GraphConfiguration","MethodName":"getSessionFactory","MethodSourceCode":"@Bean\npublic SessionFactory getSessionFactory() {\n    // 指定Neo4j应该扫描哪些包，使用每个包里面的类来指定包扫描路径，以避免脆弱性，类型安全，易于重构\n    Class<?>[] packageClasses = { AddressRepository.class, CatalogRepository.class, InventoryRepository.class, ProductRepository.class, ShipmentRepository.class, WarehouseRepository.class };\n    String[] packageNames = Arrays.asList(packageClasses).stream().map(c -> getClass().getPackage().getName()).collect(Collectors.toList()).toArray(new String[packageClasses.length]);\n    return new SessionFactory(packageNames);\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[{"MethodCalled":"getSession"}],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":" needed for session in view in web-applications","ClassName":"GraphConfiguration","MethodName":"getSession","MethodSourceCode":"// needed for session in view in web-applications\n@Bean\n@Scope(value = \"session\", proxyMode = ScopedProxyMode.TARGET_CLASS)\npublic Session getSession() throws Exception {\n    return super.getSession();\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Inventory","MethodName":"getId","MethodSourceCode":"public Long getId() {\n    return id;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Inventory","MethodName":"setId","MethodSourceCode":"public void setId(Long id) {\n    this.id = id;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Inventory","MethodName":"getInventoryNumber","MethodSourceCode":"public String getInventoryNumber() {\n    return inventoryNumber;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["inventoryNumber"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Inventory","MethodName":"setInventoryNumber","MethodSourceCode":"public void setInventoryNumber(String inventoryNumber) {\n    this.inventoryNumber = inventoryNumber;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Inventory","MethodName":"getProduct","MethodSourceCode":"public Product getProduct() {\n    return product;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["product"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Inventory","MethodName":"setProduct","MethodSourceCode":"public void setProduct(Product product) {\n    this.product = product;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Inventory","MethodName":"getWarehouse","MethodSourceCode":"public Warehouse getWarehouse() {\n    return warehouse;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["warehouse"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Inventory","MethodName":"setWarehouse","MethodSourceCode":"public void setWarehouse(Warehouse warehouse) {\n    this.warehouse = warehouse;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Inventory","MethodName":"getStatus","MethodSourceCode":"public InventoryStatus getStatus() {\n    return status;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["status"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Inventory","MethodName":"setStatus","MethodSourceCode":"public void setStatus(InventoryStatus status) {\n    this.status = status;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Inventory","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"Inventory{\" + \"id=\" + id + \", inventoryNumber='\" + inventoryNumber + '\\'' + \", product=\" + product + \", warehouse=\" + warehouse + \", status=\" + status + '}';\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["productId"],"ASTFeatures":["MethodDeclaration"],"Comments":"\n     * Inventory到Product关系为：PRODUCT_TYPE\n     * Shipment到Inventory关系为：CONTAINS_PRODUCT\n     * @param productId\n     * @return\n     ","ClassName":"InventoryRepository","MethodName":"getAvailableInventory","MethodSourceCode":"/**\n * Inventory到Product关系为：PRODUCT_TYPE\n * Shipment到Inventory关系为：CONTAINS_PRODUCT\n * @param productId\n * @return\n */\n@Query(\"MATCH (product:Product)<-[:PRODUCT_TYPE]-(inventory:Inventory) WHERE product.productId = {productId} AND NOT (inventory)<-[:CONTAINS_PRODUCT]-() RETURN inventory\")\nList<Inventory> getAvailableInventory(@Param(\"productId\") String productId);","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["productId","warehouseName"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"InventoryRepository","MethodName":"getAvailableInventoryForProductAndWarehouse","MethodSourceCode":"@Query(\"MATCH (product:Product)<-[:PRODUCT_TYPE]-(inventory:Inventory)-[:STOCKED_IN]->(:Warehouse {name:{warehouseName}}) WHERE product.productId = {productId} AND NOT (inventory)<-[:CONTAINS_PRODUCT]-() RETURN inventory\")\nList<Inventory> getAvailableInventoryForProductAndWarehouse(@Param(\"productId\") String productId, @Param(\"warehouseName\") String warehouseName);","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["productIds"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"InventoryRepository","MethodName":"getAvailableInventoryForProductIds","MethodSourceCode":"@Query(\"MATCH (product:Product)<-[:PRODUCT_TYPE]-(inventory:Inventory) WHERE product.productId in {productIds} AND NOT (inventory)<-[:CONTAINS_PRODUCT]-() RETURN inventory\")\nList<Inventory> getAvailableInventoryForProductIds(@Param(\"productIds\") String[] productIds);","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["args"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"InventoryServiceApplication","MethodName":"main","MethodSourceCode":"public static void main(String[] args) {\n    SpringApplication.run(InventoryServiceApplication.class, args);\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["config"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"InventoryServiceApplication","MethodName":"configureRepositoryRestConfiguration","MethodSourceCode":"@Override\npublic void configureRepositoryRestConfiguration(RepositoryRestConfiguration config) {\n    config.exposeIdsFor(Catalog.class, Product.class);\n    config.setBasePath(\"/api\");\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["databaseInitializer"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"InventoryServiceApplication","MethodName":"commandLineRunner","MethodSourceCode":"@Bean\n@Profile(\"dev\")\npublic CommandLineRunner commandLineRunner(DatabaseInitializer databaseInitializer) {\n    return args -> databaseInitializer.populate();\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[{"MethodCalled":"getUsername"},{"MethodCalled":"getPassword"},{"MethodCalled":"getHost"},{"MethodCalled":"getPort"},{"MethodCalled":"getHost"},{"MethodCalled":"getPort"},{"MethodCalled":"getUri"}],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Neo4jProperties","MethodName":"setup","MethodSourceCode":"@PostConstruct\npublic void setup() {\n    Assert.hasText(this.host, \"需要提供主机名\");\n    // 基础int默认值为0\n    Assert.isTrue(this.port > 0, \"需要提供端口\");\n    if (!StringUtils.hasText(this.uri)) {\n        this.uri = // http://user:password@localhost:7474\n        String.format(// http://user:password@localhost:7474\n        \"http://%s:%s@%s:%s\", getUsername(), getPassword(), getHost(), getPort());\n    }\n    LogFactory.getLog(getClass()).info(String.format(\"host=%s, port=%s, uri=%s\", getHost(), getPort(), getUri()));\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Neo4jProperties","MethodName":"getHost","MethodSourceCode":"public String getHost() {\n    return host;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["host"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Neo4jProperties","MethodName":"setHost","MethodSourceCode":"public void setHost(String host) {\n    this.host = host;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Neo4jProperties","MethodName":"getPort","MethodSourceCode":"public int getPort() {\n    return port;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["port"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Neo4jProperties","MethodName":"setPort","MethodSourceCode":"public void setPort(int port) {\n    this.port = port;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Neo4jProperties","MethodName":"getPassword","MethodSourceCode":"public String getPassword() {\n    return password;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["password"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Neo4jProperties","MethodName":"setPassword","MethodSourceCode":"public void setPassword(String password) {\n    this.password = password;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Neo4jProperties","MethodName":"getUsername","MethodSourceCode":"public String getUsername() {\n    return username;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["username"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Neo4jProperties","MethodName":"setUsername","MethodSourceCode":"public void setUsername(String username) {\n    this.username = username;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Neo4jProperties","MethodName":"getUri","MethodSourceCode":"public String getUri() {\n    return uri;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["uri"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Neo4jProperties","MethodName":"setUri","MethodSourceCode":"public void setUri(String uri) {\n    this.uri = uri;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"getId","MethodSourceCode":"public Long getId() {\n    return id;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"setId","MethodSourceCode":"public void setId(Long id) {\n    this.id = id;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"getName","MethodSourceCode":"public String getName() {\n    return name;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["name"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"setName","MethodSourceCode":"public void setName(String name) {\n    this.name = name;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"getProductId","MethodSourceCode":"public String getProductId() {\n    return productId;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["productId"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"setProductId","MethodSourceCode":"public void setProductId(String productId) {\n    this.productId = productId;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"getDescription","MethodSourceCode":"public String getDescription() {\n    return description;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["description"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"setDescription","MethodSourceCode":"public void setDescription(String description) {\n    this.description = description;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"getUnitPrice","MethodSourceCode":"public Double getUnitPrice() {\n    return unitPrice;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["unitPrice"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"setUnitPrice","MethodSourceCode":"public void setUnitPrice(Double unitPrice) {\n    this.unitPrice = unitPrice;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"getInStock","MethodSourceCode":"public Boolean getInStock() {\n    return inStock;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["inStock"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"setInStock","MethodSourceCode":"public void setInStock(Boolean inStock) {\n    this.inStock = inStock;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"Product{\" + \"id=\" + id + \", name='\" + name + '\\'' + \", productId='\" + productId + '\\'' + \", description='\" + description + '\\'' + \", unitPrice=\" + unitPrice + \", inStock=\" + inStock + '}';\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["productId"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"ProductRepository","MethodName":"getProductByProductId","MethodSourceCode":"Product getProductByProductId(@Param(\"productId\") String productId);","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Shipment","MethodName":"getId","MethodSourceCode":"public Long getId() {\n    return id;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Shipment","MethodName":"setId","MethodSourceCode":"public void setId(Long id) {\n    this.id = id;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Shipment","MethodName":"getInventories","MethodSourceCode":"public Set<Inventory> getInventories() {\n    return inventories;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["inventories"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Shipment","MethodName":"setInventories","MethodSourceCode":"public void setInventories(Set<Inventory> inventories) {\n    this.inventories = inventories;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Shipment","MethodName":"getDeliveryAddress","MethodSourceCode":"public Address getDeliveryAddress() {\n    return deliveryAddress;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["deliveryAddress"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Shipment","MethodName":"setDeliveryAddress","MethodSourceCode":"public void setDeliveryAddress(Address deliveryAddress) {\n    this.deliveryAddress = deliveryAddress;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Shipment","MethodName":"getFromWarehouse","MethodSourceCode":"public Warehouse getFromWarehouse() {\n    return fromWarehouse;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["fromWarehouse"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Shipment","MethodName":"setFromWarehouse","MethodSourceCode":"public void setFromWarehouse(Warehouse fromWarehouse) {\n    this.fromWarehouse = fromWarehouse;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Shipment","MethodName":"getShipmentStatus","MethodSourceCode":"public ShipmentStatus getShipmentStatus() {\n    return shipmentStatus;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["shipmentStatus"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Shipment","MethodName":"setShipmentStatus","MethodSourceCode":"public void setShipmentStatus(ShipmentStatus shipmentStatus) {\n    this.shipmentStatus = shipmentStatus;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Shipment","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"Shipment{\" + \"id=\" + id + \", inventories=\" + inventories + \", deliveryAddress=\" + deliveryAddress + \", fromWarehouse=\" + fromWarehouse + \", shipmentStatus=\" + shipmentStatus + '}';\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Warehouse","MethodName":"getId","MethodSourceCode":"public Long getId() {\n    return id;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Warehouse","MethodName":"setId","MethodSourceCode":"public void setId(Long id) {\n    this.id = id;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Warehouse","MethodName":"getName","MethodSourceCode":"public String getName() {\n    return name;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["name"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Warehouse","MethodName":"setName","MethodSourceCode":"public void setName(String name) {\n    this.name = name;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Warehouse","MethodName":"getAddress","MethodSourceCode":"public Address getAddress() {\n    return address;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["address"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Warehouse","MethodName":"setAddress","MethodSourceCode":"public void setAddress(Address address) {\n    this.address = address;\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Warehouse","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"Warehouse{\" + \"id=\" + id + \", name='\" + name + '\\'' + \", address=\" + address + '}';\n}","Folder":"inventory-service"},{"Variables":[],"Methodscalled":[],"Parameters":["args"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OnlineStoreApplication","MethodName":"main","MethodSourceCode":"public static void main(String[] args) {\n    SpringApplication.run(OnlineStoreApplication.class, args);\n}","Folder":"online-store-app"},{"Variables":[],"Methodscalled":[],"Parameters":["http"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OnlineStoreApplication","MethodName":"configure","MethodSourceCode":"@Override\nprotected void configure(HttpSecurity http) throws Exception {\n    http.antMatcher(\"/**\").authorizeRequests().antMatchers(\"/\", \"/index.html\", \"/assets/**\", \"/login\", \"/api/catalog/**\").permitAll().anyRequest().authenticated().and().logout().logoutSuccessUrl(\"/\").permitAll().and().csrf().csrfTokenRepository(// What Angular would like is for the server to send it a cookie called \"XSRF-TOKEN\" and if it sees that, it will send the value back as a header named \"X-XSRF-TOKEN\". 需要注意withHttpOnlyFalse后容易受到XSS攻击\n    CookieCsrfTokenRepository.withHttpOnlyFalse());\n    // .and().csrf().disable(); // 这样虽然可以工作，但不安全\n}","Folder":"online-store-app"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Account","MethodName":"getId","MethodSourceCode":"public Long getId() {\n    return id;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Account","MethodName":"setId","MethodSourceCode":"public void setId(Long id) {\n    this.id = id;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Account","MethodName":"getUserId","MethodSourceCode":"public String getUserId() {\n    return userId;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["userId"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Account","MethodName":"setUserId","MethodSourceCode":"public void setUserId(String userId) {\n    this.userId = userId;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Account","MethodName":"getAccountNumber","MethodSourceCode":"public String getAccountNumber() {\n    return accountNumber;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["accountNumber"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Account","MethodName":"setAccountNumber","MethodSourceCode":"public void setAccountNumber(String accountNumber) {\n    this.accountNumber = accountNumber;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Account","MethodName":"isDefaultAccount","MethodSourceCode":"public Boolean isDefaultAccount() {\n    return defaultAccount;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["defaultAccount"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Account","MethodName":"setDefaultAccount","MethodSourceCode":"public void setDefaultAccount(Boolean defaultAccount) {\n    this.defaultAccount = defaultAccount;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Account","MethodName":"getCreditCards","MethodSourceCode":"public Set<CreditCard> getCreditCards() {\n    return creditCards;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["creditCards"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Account","MethodName":"setCreditCards","MethodSourceCode":"public void setCreditCards(Set<CreditCard> creditCards) {\n    this.creditCards = creditCards;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Account","MethodName":"getAddresses","MethodSourceCode":"public Set<Address> getAddresses() {\n    return addresses;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["addresses"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Account","MethodName":"setAddresses","MethodSourceCode":"public void setAddresses(Set<Address> addresses) {\n    this.addresses = addresses;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Account","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"Account{\" + \"id=\" + id + \", userId='\" + userId + '\\'' + \", accountNumber='\" + accountNumber + '\\'' + \", defaultAccount=\" + defaultAccount + \", creditCards=\" + creditCards + \", addresses=\" + addresses + '}';\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"Address{\" + \"id=\" + id + \", country='\" + country + '\\'' + \", province='\" + province + '\\'' + \", city='\" + city + '\\'' + \", district='\" + district + '\\'' + \", street1='\" + street1 + '\\'' + \", street2='\" + street2 + '\\'' + \", zipCode=\" + zipCode + \", addressType=\" + addressType + '}';\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getId","MethodSourceCode":"public Long getId() {\n    return id;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setId","MethodSourceCode":"public void setId(Long id) {\n    this.id = id;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getCountry","MethodSourceCode":"public String getCountry() {\n    return country;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["country"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setCountry","MethodSourceCode":"public void setCountry(String country) {\n    this.country = country;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getProvince","MethodSourceCode":"public String getProvince() {\n    return province;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["province"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setProvince","MethodSourceCode":"public void setProvince(String province) {\n    this.province = province;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getCity","MethodSourceCode":"public String getCity() {\n    return city;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["city"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setCity","MethodSourceCode":"public void setCity(String city) {\n    this.city = city;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getDistrict","MethodSourceCode":"public String getDistrict() {\n    return district;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["district"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setDistrict","MethodSourceCode":"public void setDistrict(String district) {\n    this.district = district;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getStreet1","MethodSourceCode":"public String getStreet1() {\n    return street1;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["street1"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setStreet1","MethodSourceCode":"public void setStreet1(String street1) {\n    this.street1 = street1;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getStreet2","MethodSourceCode":"public String getStreet2() {\n    return street2;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["street2"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setStreet2","MethodSourceCode":"public void setStreet2(String street2) {\n    this.street2 = street2;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getZipCode","MethodSourceCode":"public Integer getZipCode() {\n    return zipCode;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["zipCode"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setZipCode","MethodSourceCode":"public void setZipCode(Integer zipCode) {\n    this.zipCode = zipCode;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getAddressType","MethodSourceCode":"public AddressType getAddressType() {\n    return addressType;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["addressType"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setAddressType","MethodSourceCode":"public void setAddressType(AddressType addressType) {\n    this.addressType = addressType;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["accountNumber"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderControllerV1","MethodName":"getOrders","MethodSourceCode":"@RequestMapping(value = \"/accounts/{accountNumber}/orders\")\npublic ResponseEntity getOrders(@PathVariable(\"accountNumber\") String accountNumber) throws Exception {\n    return Optional.ofNullable(orderService.getOrdersForAccount(accountNumber)).map(orders -> new ResponseEntity<>(orders, HttpStatus.OK)).orElseThrow(() -> new Exception(\"用户不存在该账户\"));\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[{"MethodCalled":"addOrderEvent"}],"Parameters":["orderEvent","orderId"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderControllerV1","MethodName":"addOrderEvent","MethodSourceCode":"@RequestMapping(value = \"/orders/{orderId}/events\", method = RequestMethod.POST)\npublic ResponseEntity addOrderEvent(@RequestBody OrderEvent orderEvent, @PathVariable(\"orderId\") String orderId) throws Exception {\n    Assert.notNull(orderEvent);\n    Assert.notNull(orderId);\n    return Optional.ofNullable(orderService.addOrderEvent(orderEvent, true)).map(result -> new ResponseEntity<>(result, HttpStatus.NO_CONTENT)).orElseThrow(() -> new Exception(\"订单事件不能被应用到该订单\"));\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[{"MethodCalled":"getOrder"}],"Parameters":["orderId"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderControllerV1","MethodName":"getOrder","MethodSourceCode":"@RequestMapping(value = \"/orders/{orderId}\", method = RequestMethod.GET)\npublic ResponseEntity<Order> getOrder(@PathVariable(\"orderId\") String orderId) throws Exception {\n    Assert.notNull(orderId);\n    return Optional.ofNullable(orderService.getOrder(orderId, true)).map(order -> new ResponseEntity<>(order, HttpStatus.OK)).orElseThrow(() -> new Exception(\"不能够获取订单\"));\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[{"MethodCalled":"createOrder"}],"Parameters":["orderItems"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderControllerV1","MethodName":"createOrder","MethodSourceCode":"@RequestMapping(value = \"/orders\", method = RequestMethod.POST)\npublic ResponseEntity<Order> createOrder(@RequestBody List<OrderItem> orderItems) throws Exception {\n    Assert.notNull(orderItems);\n    Assert.isTrue(orderItems.size() > 0);\n    return Optional.ofNullable(orderService.createOrder(orderItems)).map(order -> new ResponseEntity<>(order, HttpStatus.OK)).orElseThrow(() -> new Exception(\"不能够创建订单\"));\n}","Folder":"order-service"},{"Variables":[{"VariableName":"accounts"},{"VariableName":"defaultAccount"},{"VariableName":"newOrder"}],"Methodscalled":[],"Parameters":["orderItems"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderServiceV1","MethodName":"createOrder","MethodSourceCode":"public Order createOrder(List<OrderItem> orderItems) {\n    Account[] accounts = oAuth2RestTemplate.getForObject(\"http://account-service/v1/accounts\", Account[].class);\n    Account defaultAccount = Arrays.stream(accounts).filter(Account::isDefaultAccount).findFirst().orElse(null);\n    if (defaultAccount == null) {\n        return null;\n    }\n    Order newOrder = new Order(defaultAccount.getAccountNumber(), defaultAccount.getAddresses().stream().filter(address -> address.getAddressType() == AddressType.SHIPPING).findFirst().orElseThrow(() -> new RuntimeException(\"默认账户没有收货地址\")));\n    newOrder.setOrderItems(orderItems);\n    newOrder = orderRepositroy.save(newOrder);\n    return newOrder;\n}","Folder":"order-service"},{"Variables":[{"VariableName":"order"}],"Methodscalled":[{"MethodCalled":"validateAccountNumber"}],"Parameters":["orderEvent","validate"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderServiceV1","MethodName":"addOrderEvent","MethodSourceCode":"public Boolean addOrderEvent(OrderEvent orderEvent, Boolean validate) throws Exception {\n    // 得到订单事件对应的订单\n    Order order = orderRepositroy.findOne(orderEvent.getOrderId());\n    if (validate) {\n        // 验证事件对应的订单的账户号(account number)属于用户。\n        validateAccountNumber(order.getAccountNumber());\n    }\n    // 保存订单事件\n    orderEventRepository.save(orderEvent);\n    return true;\n}","Folder":"order-service"},{"Variables":[{"VariableName":"order"},{"VariableName":"orderEvents"}],"Methodscalled":[{"MethodCalled":"validateAccountNumber"}],"Parameters":["orderId","validate"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderServiceV1","MethodName":"getOrder","MethodSourceCode":"public Order getOrder(String orderId, Boolean validate) {\n    // 获取订单\n    Order order = orderRepositroy.findOne(orderId);\n    if (validate) {\n        // 验证事件对应的订单的账户号(account number)属于用户\n        try {\n            validateAccountNumber(order.getAccountNumber());\n        } catch (Exception e) {\n            return null;\n        }\n    }\n    Flux<OrderEvent> orderEvents = Flux.fromStream(orderEventRepository.findOrderEventsByOrderId(orderId));\n    // 聚合订单状态\n    return orderEvents.takeWhile(orderEvent -> orderEvent.getType() != OrderEventType.DELIVERED).reduceWith(() -> order, Order::incorporate).get();\n}","Folder":"order-service"},{"Variables":[{"VariableName":"orders"}],"Methodscalled":[{"MethodCalled":"validateAccountNumber"},{"MethodCalled":"getOrder"}],"Parameters":["accountNUmber"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderServiceV1","MethodName":"getOrdersForAccount","MethodSourceCode":"public List<Order> getOrdersForAccount(String accountNUmber) throws Exception {\n    validateAccountNumber(accountNUmber);\n    List<Order> orders = orderRepositroy.findByAccountNumber(accountNUmber);\n    return orders.stream().map(order -> getOrder(order.getOrderId(), true)).filter(order -> order != null).collect(Collectors.toList());\n}","Folder":"order-service"},{"Variables":[{"VariableName":"accounts"}],"Methodscalled":[],"Parameters":["accountNumber"],"ASTFeatures":["MethodDeclaration"],"Comments":"\n     * 验证账户号是否有效\n     * @param accountNumber\n     * @return 一个布尔值表示账户号是否有效\n     * @throws Exception 账户号无效时抛出异常\n     ","ClassName":"OrderServiceV1","MethodName":"validateAccountNumber","MethodSourceCode":"/**\n * 验证账户号是否有效\n * @param accountNumber\n * @return 一个布尔值表示账户号是否有效\n * @throws Exception 账户号无效时抛出异常\n */\npublic boolean validateAccountNumber(String accountNumber) throws Exception {\n    Account[] accounts = oAuth2RestTemplate.getForObject(\"http://account-service/v1/accounts\", Account[].class);\n    // 确保账户号被当前验证用户拥有\n    if (accounts != null && !Arrays.stream(accounts).anyMatch(account -> Objects.equals(account.getAccountNumber(), accountNumber))) {\n        log.error(\"账户号无效:\" + accountNumber);\n        throw new Exception(\"账户号无效:\" + accountNumber);\n    }\n    return true;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CreditCard","MethodName":"getId","MethodSourceCode":"public Long getId() {\n    return id;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CreditCard","MethodName":"setId","MethodSourceCode":"public void setId(Long id) {\n    this.id = id;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CreditCard","MethodName":"getNumber","MethodSourceCode":"public String getNumber() {\n    return number;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["number"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CreditCard","MethodName":"setNumber","MethodSourceCode":"public void setNumber(String number) {\n    this.number = number;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CreditCard","MethodName":"getType","MethodSourceCode":"public CreditCardType getType() {\n    return type;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["type"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CreditCard","MethodName":"setType","MethodSourceCode":"public void setType(CreditCardType type) {\n    this.type = type;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CreditCard","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"CreditCard{\" + \"id=\" + id + \", number='\" + number + '\\'' + \", type=\" + type + '}';\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Customer","MethodName":"getId","MethodSourceCode":"public Long getId() {\n    return id;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Customer","MethodName":"setId","MethodSourceCode":"public void setId(Long id) {\n    this.id = id;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Customer","MethodName":"getFirstName","MethodSourceCode":"public String getFirstName() {\n    return firstName;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["firstName"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Customer","MethodName":"setFirstName","MethodSourceCode":"public void setFirstName(String firstName) {\n    this.firstName = firstName;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Customer","MethodName":"getLastName","MethodSourceCode":"public String getLastName() {\n    return lastName;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["lastName"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Customer","MethodName":"setLastName","MethodSourceCode":"public void setLastName(String lastName) {\n    this.lastName = lastName;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Customer","MethodName":"getEmail","MethodSourceCode":"public String getEmail() {\n    return email;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["email"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Customer","MethodName":"setEmail","MethodSourceCode":"public void setEmail(String email) {\n    this.email = email;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Customer","MethodName":"getAccount","MethodSourceCode":"public Account getAccount() {\n    return account;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["account"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Customer","MethodName":"setAccount","MethodSourceCode":"public void setAccount(Account account) {\n    this.account = account;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Customer","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"Customer{\" + \"id=\" + id + \", firstName='\" + firstName + '\\'' + \", lastName='\" + lastName + '\\'' + \", email='\" + email + '\\'' + \", account=\" + account + '}';\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BaseEntity","MethodName":"getLastModified","MethodSourceCode":"@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\")\npublic Date getLastModified() {\n    return lastModified;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["lastModified"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BaseEntity","MethodName":"setLastModified","MethodSourceCode":"public void setLastModified(Date lastModified) {\n    this.lastModified = lastModified;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BaseEntity","MethodName":"getCreatedAt","MethodSourceCode":"@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\")\npublic Date getCreatedAt() {\n    return createdAt;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["createdAt"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BaseEntity","MethodName":"setCreatedAt","MethodSourceCode":"public void setCreatedAt(Date createdAt) {\n    this.createdAt = createdAt;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BaseEntity","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"BaseEntity{\" + \"lastModified=\" + lastModified + \", createdAt=\" + createdAt + '}';\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BaseEntityDto","MethodName":"getCreatedAt","MethodSourceCode":"public Long getCreatedAt() {\n    return createdAt;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["createdAt"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BaseEntityDto","MethodName":"setCreatedAt","MethodSourceCode":"public void setCreatedAt(Long createdAt) {\n    this.createdAt = createdAt;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BaseEntityDto","MethodName":"getLastModified","MethodSourceCode":"public Long getLastModified() {\n    return lastModified;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["lastModified"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BaseEntityDto","MethodName":"setLastModified","MethodSourceCode":"public void setLastModified(Long lastModified) {\n    this.lastModified = lastModified;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BaseEntityDto","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"BaseEntity{\" + \"createdAt=\" + createdAt + \", lastModified=\" + lastModified + '}';\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Invoice","MethodName":"getInvoiceId","MethodSourceCode":"public String getInvoiceId() {\n    return invoiceId;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["invoiceId"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Invoice","MethodName":"setInvoiceId","MethodSourceCode":"public void setInvoiceId(String invoiceId) {\n    this.invoiceId = invoiceId;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Invoice","MethodName":"getCustomerId","MethodSourceCode":"public String getCustomerId() {\n    return customerId;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["customerId"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Invoice","MethodName":"setCustomerId","MethodSourceCode":"public void setCustomerId(String customerId) {\n    this.customerId = customerId;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Invoice","MethodName":"getOrders","MethodSourceCode":"public List<Order> getOrders() {\n    return orders;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["orders"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Invoice","MethodName":"setOrders","MethodSourceCode":"public void setOrders(List<Order> orders) {\n    this.orders = orders;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Invoice","MethodName":"getBillingAddress","MethodSourceCode":"public Address getBillingAddress() {\n    return billingAddress;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["billingAddress"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Invoice","MethodName":"setBillingAddress","MethodSourceCode":"public void setBillingAddress(Address billingAddress) {\n    this.billingAddress = billingAddress;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Invoice","MethodName":"getInvoiceStatus","MethodSourceCode":"public InvoiceStatus getInvoiceStatus() {\n    return invoiceStatus;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["invoiceStatus"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Invoice","MethodName":"setInvoiceStatus","MethodSourceCode":"public void setInvoiceStatus(InvoiceStatus invoiceStatus) {\n    this.invoiceStatus = invoiceStatus;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Invoice","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"Invoice{\" + \"invoiceId='\" + invoiceId + '\\'' + \", customerId='\" + customerId + '\\'' + \", orders=\" + orders + \", billingAddress=\" + billingAddress + \", invoiceStatus=\" + invoiceStatus + '}';\n}","Folder":"order-service"},{"Variables":[{"VariableName":"date"}],"Methodscalled":[{"MethodCalled":"onBeforeSave"}],"Parameters":["event"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BeforeSaveListener","MethodName":"onBeforeSave","MethodSourceCode":"@Override\npublic void onBeforeSave(BeforeSaveEvent<BaseEntity> event) {\n    Date date = Date.from(Instant.now());\n    if (event.getSource().getCreatedAt() == null)\n        event.getSource().setCreatedAt(date);\n    event.getSource().setLastModified(date);\n    super.onBeforeSave(event);\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["orderItem"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Order","MethodName":"addOrderItem","MethodSourceCode":"public void addOrderItem(OrderItem orderItem) {\n    orderItems.add(orderItem);\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["orderEvent"],"ASTFeatures":["MethodDeclaration"],"Comments":"\n     * <p>incorporate 方法通过一个针对订单状态的简单的状态机(state machine) ，使用事件源(event sourcing)\n     * 和聚合(aggregation)来生成订单的当前状态<\/p>\n     * <p>下面的事件流图表示事件怎么被合并来生成订单状态。订单状态的事件日志可以被用来在分布式事务失败时回滚订单的状态。每个状态只对应两个操作：前进/后退。PURCHASED状态没有回退，DELIVERED状态没有前进<\/p>\n     * <p>\n     * Events:   +<--PURCHASED+  +<--CREATED+  +<---ORDERED+  +<----SHIPPED+ 回退 <br/>\n     * *         |            |  |          |  |           |  |            | <br/>\n     * Status    +PURCHASED---+PENDING------+CONFIRMED-----+SHIPPED--------+DELIVERED <br/>\n     * *         |            |  |          |  |           |  |            | <br/>\n     * Events:   +CREATED---->+  +ORDERED-->+  +SHIPPED--->+  +DELIVERED-->+ 前进<br/>\n     * <\/p>\n     * @param orderEvent 是将要被合并进状态机的事件\n     * @return 有着聚合的订单状态的 {@link Order} 聚合\n     ","ClassName":"Order","MethodName":"incorporate","MethodSourceCode":"/**\n * <p>incorporate 方法通过一个针对订单状态的简单的状态机(state machine) ，使用事件源(event sourcing)\n * 和聚合(aggregation)来生成订单的当前状态<\/p>\n * <p>下面的事件流图表示事件怎么被合并来生成订单状态。订单状态的事件日志可以被用来在分布式事务失败时回滚订单的状态。每个状态只对应两个操作：前进/后退。PURCHASED状态没有回退，DELIVERED状态没有前进<\/p>\n * <p>\n * Events:   +<--PURCHASED+  +<--CREATED+  +<---ORDERED+  +<----SHIPPED+ 回退 <br/>\n * *         |            |  |          |  |           |  |            | <br/>\n * Status    +PURCHASED---+PENDING------+CONFIRMED-----+SHIPPED--------+DELIVERED <br/>\n * *         |            |  |          |  |           |  |            | <br/>\n * Events:   +CREATED---->+  +ORDERED-->+  +SHIPPED--->+  +DELIVERED-->+ 前进<br/>\n * <\/p>\n * @param orderEvent 是将要被合并进状态机的事件\n * @return 有着聚合的订单状态的 {@link Order} 聚合\n */\npublic Order incorporate(OrderEvent orderEvent) {\n    if (orderStatus == null)\n        orderStatus = OrderStatus.PURCHASED;\n    orderStatus = orderStatus.nextStatus(orderEvent);\n    return this;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"\n     * 使用ObjectId，因为它带有时间和自增顺序\n     * @return\n     ","ClassName":"Order","MethodName":"getOrderId","MethodSourceCode":"/**\n * 使用ObjectId，因为它带有时间和自增顺序\n * @return\n */\npublic String getOrderId() {\n    return orderId != null ? orderId.toHexString() : null;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["orderId"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Order","MethodName":"setOrderId","MethodSourceCode":"public void setOrderId(ObjectId orderId) {\n    this.orderId = orderId;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Order","MethodName":"getAccountNumber","MethodSourceCode":"public String getAccountNumber() {\n    return accountNumber;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["accountNumber"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Order","MethodName":"setAccountNumber","MethodSourceCode":"public void setAccountNumber(String accountNumber) {\n    this.accountNumber = accountNumber;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Order","MethodName":"getOrderStatus","MethodSourceCode":"public OrderStatus getOrderStatus() {\n    return orderStatus;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["orderStatus"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Order","MethodName":"setOrderStatus","MethodSourceCode":"public void setOrderStatus(OrderStatus orderStatus) {\n    this.orderStatus = orderStatus;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Order","MethodName":"getOrderItems","MethodSourceCode":"public List<OrderItem> getOrderItems() {\n    return orderItems;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["orderItems"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Order","MethodName":"setOrderItems","MethodSourceCode":"public void setOrderItems(List<OrderItem> orderItems) {\n    this.orderItems = orderItems;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Order","MethodName":"getShippingAddress","MethodSourceCode":"public Address getShippingAddress() {\n    return shippingAddress;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["shippingAddress"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Order","MethodName":"setShippingAddress","MethodSourceCode":"public void setShippingAddress(Address shippingAddress) {\n    this.shippingAddress = shippingAddress;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Order","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"Order{\" + \"orderId='\" + orderId + '\\'' + \", accountNumber='\" + accountNumber + '\\'' + \", orderStatus=\" + orderStatus + \", orderItems=\" + orderItems + \", shippingAddress=\" + shippingAddress + '}';\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderEvent","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"OrderEvent{\" + \"id='\" + id + '\\'' + \", type=\" + type + \", orderId='\" + orderId + '\\'' + '}';\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderEvent","MethodName":"getId","MethodSourceCode":"public String getId() {\n    return id;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderEvent","MethodName":"setId","MethodSourceCode":"public void setId(String id) {\n    this.id = id;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderEvent","MethodName":"getType","MethodSourceCode":"public OrderEventType getType() {\n    return type;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["type"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderEvent","MethodName":"setType","MethodSourceCode":"public void setType(OrderEventType type) {\n    this.type = type;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderEvent","MethodName":"getOrderId","MethodSourceCode":"public String getOrderId() {\n    return orderId;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["orderId"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderEvent","MethodName":"setOrderId","MethodSourceCode":"public void setOrderId(String orderId) {\n    this.orderId = orderId;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["orderId"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderEventRepository","MethodName":"findOrderEventsByOrderId","MethodSourceCode":"Stream<OrderEvent> findOrderEventsByOrderId(@Param(\"orderId\") String orderId);","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderItem","MethodName":"getName","MethodSourceCode":"public String getName() {\n    return name;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["name"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderItem","MethodName":"setName","MethodSourceCode":"public void setName(String name) {\n    this.name = name;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderItem","MethodName":"getProductId","MethodSourceCode":"public String getProductId() {\n    return productId;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["productId"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderItem","MethodName":"setProductId","MethodSourceCode":"public void setProductId(String productId) {\n    this.productId = productId;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderItem","MethodName":"getQuantity","MethodSourceCode":"public Integer getQuantity() {\n    return quantity;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["quantity"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderItem","MethodName":"setQuantity","MethodSourceCode":"public void setQuantity(Integer quantity) {\n    this.quantity = quantity;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderItem","MethodName":"getPrice","MethodSourceCode":"public Double getPrice() {\n    return price;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["price"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderItem","MethodName":"setPrice","MethodSourceCode":"public void setPrice(Double price) {\n    this.price = price;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderItem","MethodName":"getTax","MethodSourceCode":"public Double getTax() {\n    return tax;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["tax"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderItem","MethodName":"setTax","MethodSourceCode":"public void setTax(Double tax) {\n    this.tax = tax;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["accountNumber"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderRepositroy","MethodName":"findByAccountNumber","MethodSourceCode":"List<Order> findByAccountNumber(String accountNumber);","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["orderEvent"],"ASTFeatures":["MethodDeclaration"],"Comments":"\n     * get next order status according to order event\n     *\n     * @param orderEvent order event\n     * @return next order status, according to order event, next status maybe forward or rollback\n     ","ClassName":"","MethodName":"nextStatus","MethodSourceCode":"/**\n * get next order status according to order event\n *\n * @param orderEvent order event\n * @return next order status, according to order event, next status maybe forward or rollback\n */\npublic abstract OrderStatus nextStatus(OrderEvent orderEvent);","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["orderEvent"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"","MethodName":"nextStatus","MethodSourceCode":"@Override\npublic OrderStatus nextStatus(OrderEvent orderEvent) {\n    if (orderEvent.getType() == OrderEventType.CREATED)\n        // 表示订单状态前进：PURCHASED -> PENDING\n        return OrderStatus.PENDING;\n    throw new IllegalArgumentException(\"Illegal order event type \" + orderEvent + \". only accept \" + OrderEventType.CREATED);\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["orderEvent"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"","MethodName":"nextStatus","MethodSourceCode":"@Override\npublic OrderStatus nextStatus(OrderEvent orderEvent) {\n    if (orderEvent.getType() == OrderEventType.ORDERED)\n        // 表示订单状态前进：PENDING -> CONFIRMED\n        return CONFIRMED;\n    else if (orderEvent.getType() == OrderEventType.PURCHASED)\n        // 表示订单状态回退：PENDING -> PURCHASED\n        return OrderStatus.PURCHASED;\n    throw new IllegalArgumentException(\"Illegal order event type \" + orderEvent + \". only accept \" + OrderEventType.ORDERED + \" or \" + OrderEventType.PURCHASED);\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["orderEvent"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"","MethodName":"nextStatus","MethodSourceCode":"@Override\npublic OrderStatus nextStatus(OrderEvent orderEvent) {\n    if (orderEvent.getType() == OrderEventType.SHIPPED) {\n        // 表示订单状态前进：CONFIRMED -> SHIPPED\n        return OrderStatus.SHIPPED;\n    } else if (orderEvent.getType() == OrderEventType.CREATED) {\n        // 表示订单状态回退：CONFIRMED -> PENDING\n        return OrderStatus.PENDING;\n    }\n    throw new IllegalArgumentException(\"Illegal order event type \" + orderEvent + \". only accept \" + OrderEventType.SHIPPED + \" or \" + OrderEventType.CREATED);\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["orderEvent"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"","MethodName":"nextStatus","MethodSourceCode":"@Override\npublic OrderStatus nextStatus(OrderEvent orderEvent) {\n    if (orderEvent.getType() == OrderEventType.DELIVERED) {\n        // 表示订单状态前进：SHIPPED -> DELIVERED\n        return OrderStatus.DELIVERED;\n    } else if (orderEvent.getType() == OrderEventType.ORDERED) {\n        // 表示订单状态回退：CONFIRMED -> PENDING\n        return OrderStatus.CONFIRMED;\n    }\n    throw new IllegalArgumentException(\"Illegal order event type \" + orderEvent + \". only accept \" + OrderEventType.DELIVERED + \" or \" + OrderEventType.ORDERED);\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["orderEvent"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"","MethodName":"nextStatus","MethodSourceCode":"@Override\npublic OrderStatus nextStatus(OrderEvent orderEvent) {\n    if (orderEvent.getType() == OrderEventType.SHIPPED) {\n        // 表示订单状态回退：DELIVERED -> SHIPPED\n        return OrderStatus.SHIPPED;\n    }\n    throw new IllegalArgumentException(\"Illegal order event type \" + orderEvent + \". only accept \" + OrderEventType.SHIPPED);\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["args"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderServiceApplication","MethodName":"main","MethodSourceCode":"public static void main(String[] args) {\n    SpringApplication.run(OrderServiceApplication.class, args);\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["resourceDetails","clientContext"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderServiceApplication","MethodName":"loadBalancedOauth2RestTemplate","MethodSourceCode":"@LoadBalanced\n@Bean\npublic OAuth2RestTemplate loadBalancedOauth2RestTemplate(OAuth2ProtectedResourceDetails resourceDetails, OAuth2ClientContext clientContext) {\n    return new OAuth2RestTemplate(resourceDetails, clientContext);\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["config"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderServiceApplication","MethodName":"configureRepositoryRestConfiguration","MethodSourceCode":"@Override\npublic void configureRepositoryRestConfiguration(org.springframework.data.rest.core.config.RepositoryRestConfiguration config) {\n    config.setBasePath(\"/api\");\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"getId","MethodSourceCode":"public Long getId() {\n    return id;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"setId","MethodSourceCode":"public void setId(Long id) {\n    this.id = id;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"getUsername","MethodSourceCode":"public String getUsername() {\n    return username;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["username"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"setUsername","MethodSourceCode":"public void setUsername(String username) {\n    this.username = username;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"getFirstName","MethodSourceCode":"public String getFirstName() {\n    return firstName;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["firstName"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"setFirstName","MethodSourceCode":"public void setFirstName(String firstName) {\n    this.firstName = firstName;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"getLastName","MethodSourceCode":"public String getLastName() {\n    return lastName;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["lastName"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"setLastName","MethodSourceCode":"public void setLastName(String lastName) {\n    this.lastName = lastName;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"getCreatedAt","MethodSourceCode":"public Long getCreatedAt() {\n    return createdAt;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["createdAt"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"setCreatedAt","MethodSourceCode":"public void setCreatedAt(Long createdAt) {\n    this.createdAt = createdAt;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"getLastModified","MethodSourceCode":"public Long getLastModified() {\n    return lastModified;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["lastModified"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"setLastModified","MethodSourceCode":"public void setLastModified(Long lastModified) {\n    this.lastModified = lastModified;\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"User{\" + \"id=\" + id + \", username='\" + username + '\\'' + \", firstName='\" + firstName + '\\'' + \", lastName='\" + lastName + '\\'' + \", createdAt=\" + createdAt + \", lastModified=\" + lastModified + '}';\n}","Folder":"order-service"},{"Variables":[],"Methodscalled":[],"Parameters":["args"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"PaymentServiceApplication","MethodName":"main","MethodSourceCode":"public static void main(String[] args) {\n    SpringApplication.run(PaymentServiceApplication.class, args);\n}","Folder":"payment-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"Address{\" + \"id=\" + id + \", country='\" + country + '\\'' + \", province='\" + province + '\\'' + \", city='\" + city + '\\'' + \", district='\" + district + '\\'' + \", street1='\" + street1 + '\\'' + \", street2='\" + street2 + '\\'' + \", zipCode=\" + zipCode + \", addressType=\" + addressType + '}';\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getId","MethodSourceCode":"public Long getId() {\n    return id;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setId","MethodSourceCode":"public void setId(Long id) {\n    this.id = id;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getCountry","MethodSourceCode":"public String getCountry() {\n    return country;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["country"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setCountry","MethodSourceCode":"public void setCountry(String country) {\n    this.country = country;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getProvince","MethodSourceCode":"public String getProvince() {\n    return province;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["province"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setProvince","MethodSourceCode":"public void setProvince(String province) {\n    this.province = province;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getCity","MethodSourceCode":"public String getCity() {\n    return city;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["city"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setCity","MethodSourceCode":"public void setCity(String city) {\n    this.city = city;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getDistrict","MethodSourceCode":"public String getDistrict() {\n    return district;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["district"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setDistrict","MethodSourceCode":"public void setDistrict(String district) {\n    this.district = district;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getStreet1","MethodSourceCode":"public String getStreet1() {\n    return street1;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["street1"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setStreet1","MethodSourceCode":"public void setStreet1(String street1) {\n    this.street1 = street1;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getStreet2","MethodSourceCode":"public String getStreet2() {\n    return street2;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["street2"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setStreet2","MethodSourceCode":"public void setStreet2(String street2) {\n    this.street2 = street2;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getZipCode","MethodSourceCode":"public Integer getZipCode() {\n    return zipCode;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["zipCode"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setZipCode","MethodSourceCode":"public void setZipCode(Integer zipCode) {\n    this.zipCode = zipCode;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"getAddressType","MethodSourceCode":"public AddressType getAddressType() {\n    return addressType;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["addressType"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Address","MethodName":"setAddressType","MethodSourceCode":"public void setAddressType(AddressType addressType) {\n    this.addressType = addressType;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[{"MethodCalled":"addCartEvent"}],"Parameters":["cartEvent"],"ASTFeatures":["MethodDeclaration"],"Comments":"\n     * 增加购物车事件\n     * @param cartEvent\n     * @return\n     * @throws Exception\n     ","ClassName":"ShoppingCartControllerV1","MethodName":"addCartEvent","MethodSourceCode":"/**\n * 增加购物车事件\n * @param cartEvent\n * @return\n * @throws Exception\n */\n@RequestMapping(path = \"/events\", method = RequestMethod.POST)\npublic ResponseEntity addCartEvent(@RequestBody CartEvent cartEvent) throws Exception {\n    return Optional.ofNullable(shoppingCartService.addCartEvent(cartEvent)).map(event -> new ResponseEntity(HttpStatus.NO_CONTENT)).orElseThrow(() -> new Exception(\"不能够找到购物车\"));\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"\n     * 检出购物车\n     * @return\n     * @throws Exception\n     ","ClassName":"ShoppingCartControllerV1","MethodName":"checkoutCart","MethodSourceCode":"/**\n * 检出购物车\n * @return\n * @throws Exception\n */\n@RequestMapping(path = \"/checkout\", method = RequestMethod.POST)\npublic ResponseEntity checkoutCart() throws Exception {\n    return Optional.ofNullable(shoppingCartService.checkOut()).map(checkoutResult -> new ResponseEntity<>(checkoutResult, HttpStatus.OK)).orElseThrow(() -> new Exception(\"不能够检出购物车\"));\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"\n     * 获取购物车\n     * @return\n     * @throws Exception\n     ","ClassName":"ShoppingCartControllerV1","MethodName":"getCart","MethodSourceCode":"/**\n * 获取购物车\n * @return\n * @throws Exception\n */\n@RequestMapping(path = \"/cart\", method = RequestMethod.GET)\npublic ResponseEntity getCart() throws Exception {\n    return Optional.ofNullable(shoppingCartService.getShoppingCart()).map(cart -> new ResponseEntity(cart, HttpStatus.OK)).orElseThrow(() -> new Exception(\"不能够获取购物车\"));\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"\n     * 从user-service得到已验证的用户\n     * @return 当前验证的用户\n     ","ClassName":"ShoppingCartServiceV1","MethodName":"getAuthenticatedUser","MethodSourceCode":"/**\n * 从user-service得到已验证的用户\n * @return 当前验证的用户\n */\npublic User getAuthenticatedUser() {\n    // System.out.println(oAuth2RestTemplate.getForObject(\"http://user-service/auth/v1/me\", User.class));\n    return oAuth2RestTemplate.getForObject(\"http://user-service/auth/v1/me\", User.class);\n}","Folder":"shopping-cart-service"},{"Variables":[{"VariableName":"user"}],"Methodscalled":[{"MethodCalled":"getAuthenticatedUser"}],"Parameters":["cartEvent"],"ASTFeatures":["MethodDeclaration"],"Comments":"\n     * 为当前已验证用户添加一个购物车事件\n     * @param cartEvent 详细描述用户执行的action的事件\n     * @return 一个标识表示结果是否成功\n     ","ClassName":"ShoppingCartServiceV1","MethodName":"addCartEvent","MethodSourceCode":"/**\n * 为当前已验证用户添加一个购物车事件\n * @param cartEvent 详细描述用户执行的action的事件\n * @return 一个标识表示结果是否成功\n */\npublic Boolean addCartEvent(CartEvent cartEvent) {\n    User user = getAuthenticatedUser();\n    if (user != null) {\n        cartEvent.setUserId(user.getId());\n        cartEventRepository.save(cartEvent);\n    } else {\n        return null;\n    }\n    return true;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["cartEvent","user"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"ShoppingCartServiceV1","MethodName":"addCartEvent","MethodSourceCode":"public Boolean addCartEvent(CartEvent cartEvent, User user) {\n    if (user != null) {\n        cartEvent.setUserId(user.getId());\n        cartEventRepository.save(cartEvent);\n    } else {\n        return null;\n    }\n    return true;\n}","Folder":"shopping-cart-service"},{"Variables":[{"VariableName":"user"},{"VariableName":"shoppingCart"},{"VariableName":"catalog"}],"Methodscalled":[{"MethodCalled":"aggregateCartEvents"}],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"\n     * 为当前已验证用户得到购物车\n     * @return an aggregate object derived from events performed by the user\n     * @throws Exception\n     ","ClassName":"ShoppingCartServiceV1","MethodName":"getShoppingCart","MethodSourceCode":"/**\n * 为当前已验证用户得到购物车\n * @return an aggregate object derived from events performed by the user\n * @throws Exception\n */\npublic ShoppingCart getShoppingCart() throws Exception {\n    User user = oAuth2RestTemplate.getForObject(\"http://user-service/auth/v1/me\", User.class);\n    ShoppingCart shoppingCart = null;\n    if (user != null) {\n        Catalog catalog = restTemplate.getForObject(\"http://catalog-service/v1/catalog\", Catalog.class);\n        shoppingCart = aggregateCartEvents(user, catalog);\n    }\n    return shoppingCart;\n}","Folder":"shopping-cart-service"},{"Variables":[{"VariableName":"cartEvents"},{"VariableName":"shoppingCart"}],"Methodscalled":[],"Parameters":["user","catalog"],"ASTFeatures":["MethodDeclaration"],"Comments":"\n     * 聚合(Aggregate)一个用户的cart events，返回一个 {@link ShoppingCart}\n     * @param user 获取购物车的用户\n     * @param catalog 用于生成购物车的目录\n     * @return 一个表示用户购物车聚合状态的购物车\n     * @throws Exception 如果在购物车中的一个产品不在目录里面，则抛出异常\n     ","ClassName":"ShoppingCartServiceV1","MethodName":"aggregateCartEvents","MethodSourceCode":"/**\n * 聚合(Aggregate)一个用户的cart events，返回一个 {@link ShoppingCart}\n * @param user 获取购物车的用户\n * @param catalog 用于生成购物车的目录\n * @return 一个表示用户购物车聚合状态的购物车\n * @throws Exception 如果在购物车中的一个产品不在目录里面，则抛出异常\n */\npublic ShoppingCart aggregateCartEvents(User user, Catalog catalog) throws Exception {\n    Flux<CartEvent> cartEvents = Flux.fromStream(cartEventRepository.getCartEventStreamByUserId(user.getId()));\n    // 聚合购物车的状态\n    ShoppingCart shoppingCart = cartEvents.takeWhile(cartEvent -> !ShoppingCart.isTerminal(cartEvent.getCartEventType())).reduceWith(() -> new ShoppingCart(catalog), ShoppingCart::incorporate).get();\n    shoppingCart.getCartItems();\n    return shoppingCart;\n}","Folder":"shopping-cart-service"},{"Variables":[{"VariableName":"checkOutResult"},{"VariableName":"currentCart"},{"VariableName":"inventory"},{"VariableName":"inventoryItems"},{"VariableName":"order"},{"VariableName":"user"}],"Methodscalled":[{"MethodCalled":"getShoppingCart"},{"MethodCalled":"checkAvailableInventory"},{"MethodCalled":"addCartEvent"}],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"\n     * 检出用户当前的购物车，在处理完支付后生成一张新的订单\n     * TODO 支付集成\n     * @return 检出操作的结果\n     * @throws Exception\n     ","ClassName":"ShoppingCartServiceV1","MethodName":"checkOut","MethodSourceCode":"/**\n * 检出用户当前的购物车，在处理完支付后生成一张新的订单\n * TODO 支付集成\n * @return 检出操作的结果\n * @throws Exception\n */\npublic CheckoutResult checkOut() throws Exception {\n    CheckoutResult checkOutResult = new CheckoutResult();\n    // 检查可用库存\n    ShoppingCart currentCart = null;\n    try {\n        currentCart = getShoppingCart();\n    } catch (Exception e) {\n        log.error(\"获取购物车失败\", e);\n    }\n    if (currentCart != null) {\n        // 协调当前购物车与库存\n        Inventory[] inventory = oAuth2RestTemplate.getForObject(String.format(\"http://inventory-service/v1/inventory?productIds=%s\", currentCart.getCartItems().stream().map(CartItem::getProductId).collect(Collectors.joining(\",\"))), Inventory[].class);\n        if (inventory != null) {\n            Map<String, Long> inventoryItems = Arrays.stream(inventory).map(inv -> inv.getProduct().getProductId()).collect(groupingBy(Function.identity(), counting()));\n            /*.collect(Collectors.groupingBy(\n                                (inv -> inv.getProduct().getProductId()), Collectors.counting()));*/\n            if (checkAvailableInventory(checkOutResult, currentCart, inventoryItems)) {\n                // 预定库存 Reserve the available inventory\n                // 创建订单\n                Order order = oAuth2RestTemplate.postForObject(\"http://order-service/v1/orders\", currentCart.getCartItems().stream().map(cartItem -> new OrderItem(cartItem.getProduct().getName(), cartItem.getProductId(), cartItem.getQuantity(), cartItem.getProduct().getUnitPrice(), TAX)).collect(Collectors.toList()), Order.class);\n                if (order != null) {\n                    // 订单创建成功\n                    checkOutResult.setResultMessage(\"订单已成功创建\");\n                    // 增加订单事件\n                    oAuth2RestTemplate.postForEntity(String.format(\"http://order-service/v1/orders/%s/events\", order.getOrderId()), new OrderEvent(OrderEventType.CREATED, order.getOrderId()), ResponseEntity.class);\n                    checkOutResult.setOrder(order);\n                    User user = oAuth2RestTemplate.getForObject(\"http://user-service/auth/v1/me\", User.class);\n                    // 增加CartEventType.CHECKOUT事件，清除购物车，因为已经生成订单成功\n                    addCartEvent(new CartEvent(CartEventType.CHECKOUT, user.getId()), user);\n                }\n            }\n        }\n    }\n    // 返回检出结果：要么库存不足，要么检出成功\n    return checkOutResult;\n}","Folder":"shopping-cart-service"},{"Variables":[{"VariableName":"hasInventory"},{"VariableName":"inventoryUnAvailableCartItems"},{"VariableName":"productIds"}],"Methodscalled":[],"Parameters":["checkOutResult","currentCart","inventoryItems"],"ASTFeatures":["MethodDeclaration"],"Comments":"\n     * 检查是否有充足的库存\n     * @param checkOutResult\n     * @param currentCart\n     * @param inventoryItems\n     * @return\n     ","ClassName":"ShoppingCartServiceV1","MethodName":"checkAvailableInventory","MethodSourceCode":"/**\n * 检查是否有充足的库存\n * @param checkOutResult\n * @param currentCart\n * @param inventoryItems\n * @return\n */\npublic Boolean checkAvailableInventory(CheckoutResult checkOutResult, ShoppingCart currentCart, Map<String, Long> inventoryItems) {\n    Boolean hasInventory = true;\n    // 判断库存是否可用\n    try {\n        List<CartItem> inventoryUnAvailableCartItems = currentCart.getCartItems().stream().filter(item -> inventoryItems.get(item.getProductId()) - item.getQuantity() < 0).collect(Collectors.toList());\n        if (inventoryUnAvailableCartItems.size() > 0) {\n            String productIds = inventoryUnAvailableCartItems.stream().map(CartItem::getProductId).collect(Collectors.joining(\", \"));\n            checkOutResult.setResultMessage(String.format(\"以下产品没有充足的库存可用：%s. \" + \"请降低这些产品的数量再次尝试.\", productIds));\n            hasInventory = false;\n        }\n    } catch (Exception e) {\n        log.error(\"检查是否有可利用的库存时出错\", e);\n    }\n    return hasInventory;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CartEvent","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"CartEvent{\" + \"id=\" + id + \", cartEventType=\" + cartEventType + \", userId=\" + userId + \", productId='\" + productId + '\\'' + \", quantity=\" + quantity + '}';\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CartEvent","MethodName":"getId","MethodSourceCode":"public Long getId() {\n    return id;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CartEvent","MethodName":"setId","MethodSourceCode":"public void setId(Long id) {\n    this.id = id;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CartEvent","MethodName":"getCartEventType","MethodSourceCode":"public CartEventType getCartEventType() {\n    return cartEventType;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["cartEventType"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CartEvent","MethodName":"setCartEventType","MethodSourceCode":"public void setCartEventType(CartEventType cartEventType) {\n    this.cartEventType = cartEventType;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CartEvent","MethodName":"getUserId","MethodSourceCode":"public Long getUserId() {\n    return userId;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["userId"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CartEvent","MethodName":"setUserId","MethodSourceCode":"public void setUserId(Long userId) {\n    this.userId = userId;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CartEvent","MethodName":"getProductId","MethodSourceCode":"public String getProductId() {\n    return productId;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["productId"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CartEvent","MethodName":"setProductId","MethodSourceCode":"public void setProductId(String productId) {\n    this.productId = productId;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CartEvent","MethodName":"getQuantity","MethodSourceCode":"public Integer getQuantity() {\n    return quantity;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["quantity"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CartEvent","MethodName":"setQuantity","MethodSourceCode":"public void setQuantity(Integer quantity) {\n    this.quantity = quantity;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["userId"],"ASTFeatures":["MethodDeclaration"],"Comments":"\n     * <p>先从cart_event中取得事件类型为CLEAR_CART/CHECKOUT的事件，然后以时间降序排列，然后通过'LIMIT 1'只取时间最大的那个事件，命名为t，(临时的意思)<\/p>\n     * <p>将整个cart_event与之前的t进行右外连接，条件是两个user_id相同，同时事件创建时间在t与2900亿年后之间，通过事件id不等于t的事件id(因为't'对应的cart_event是CLEAR_CART/CHECKOUT，不应该被聚合)<\/p>\n     * <p>这样保证获取到的事件流只包含从最后一个CLEAR_CART/CHECKOUT之后的ADD_ITEM、REMOVE_ITEM的事件，因为CLEAR_CART/CHECKOUT不应该被聚合<\/p>\n     * @param userId\n     * @return\n     ","ClassName":"CartEventRepository","MethodName":"getCartEventStreamByUserId","MethodSourceCode":"/**\n * <p>先从cart_event中取得事件类型为CLEAR_CART/CHECKOUT的事件，然后以时间降序排列，然后通过'LIMIT 1'只取时间最大的那个事件，命名为t，(临时的意思)<\/p>\n * <p>将整个cart_event与之前的t进行右外连接，条件是两个user_id相同，同时事件创建时间在t与2900亿年后之间，通过事件id不等于t的事件id(因为't'对应的cart_event是CLEAR_CART/CHECKOUT，不应该被聚合)<\/p>\n * <p>这样保证获取到的事件流只包含从最后一个CLEAR_CART/CHECKOUT之后的ADD_ITEM、REMOVE_ITEM的事件，因为CLEAR_CART/CHECKOUT不应该被聚合<\/p>\n * @param userId\n * @return\n */\n@Query(value = \"SELECT c.*\\n\" + \"FROM (\\n\" + \"       SELECT *\\n\" + \"       FROM cart_event\\n\" + \"       WHERE user_id = :userId AND (cart_event_type = 'CLEAR_CART' OR cart_event_type = 'CHECKOUT')\\n\" + \"       ORDER BY cart_event.created_at DESC\\n\" + \"       LIMIT 1\\n\" + \"     ) t\\n\" + \"RIGHT JOIN cart_event c ON c.user_id = t.user_id\\n\" + \"WHERE c.created_at BETWEEN coalesce(t.created_at, 0) AND 9223372036854775807 AND coalesce(t.id, -1) != c.id\\n\" + \"ORDER BY c.created_at ASC\", nativeQuery = true)\nStream<CartEvent> getCartEventStreamByUserId(@Param(\"userId\") Long userId);","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CartItem","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"CartItem{\" + \"productId='\" + productId + '\\'' + \", product=\" + product + \", quantity=\" + quantity + '}';\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CartItem","MethodName":"getProductId","MethodSourceCode":"public String getProductId() {\n    return productId;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["productId"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CartItem","MethodName":"setProductId","MethodSourceCode":"public void setProductId(String productId) {\n    this.productId = productId;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CartItem","MethodName":"getProduct","MethodSourceCode":"public Product getProduct() {\n    return product;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["product"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CartItem","MethodName":"setProduct","MethodSourceCode":"public void setProduct(Product product) {\n    this.product = product;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CartItem","MethodName":"getQuantity","MethodSourceCode":"public Integer getQuantity() {\n    return quantity;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["quantity"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CartItem","MethodName":"setQuantity","MethodSourceCode":"public void setQuantity(Integer quantity) {\n    this.quantity = quantity;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CheckoutResult","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"CheckoutResult{\" + \"resultMessage='\" + resultMessage + '\\'' + \", order=\" + order + '}';\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CheckoutResult","MethodName":"getResultMessage","MethodSourceCode":"public String getResultMessage() {\n    return resultMessage;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["resultMessage"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CheckoutResult","MethodName":"setResultMessage","MethodSourceCode":"public void setResultMessage(String resultMessage) {\n    this.resultMessage = resultMessage;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CheckoutResult","MethodName":"getOrder","MethodSourceCode":"public Order getOrder() {\n    return order;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["order"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CheckoutResult","MethodName":"setOrder","MethodSourceCode":"public void setOrder(Order order) {\n    this.order = order;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"\n     * 从购物车事件的聚合(aggregate)生成并得到cart items\n     * @return 代表购物车状态的一个新的 {@link CartItem} list\n     * @throws Exception 如果在购物车中的一个产品不在目录里面，则抛出异常\n     ","ClassName":"ShoppingCart","MethodName":"getCartItems","MethodSourceCode":"/**\n * 从购物车事件的聚合(aggregate)生成并得到cart items\n * @return 代表购物车状态的一个新的 {@link CartItem} list\n * @throws Exception 如果在购物车中的一个产品不在目录里面，则抛出异常\n */\npublic List<CartItem> getCartItems() throws Exception {\n    cartItems = productMap.entrySet().stream().map(item -> new CartItem(item.getKey(), catalog.getProducts().stream().filter(product -> Objects.equals(product.getProductId(), item.getKey())).findFirst().orElse(null), item.getValue())).filter(item -> item.getQuantity() > 0).collect(Collectors.toList());\n    if (cartItems.stream().anyMatch(item -> item.getProduct() == null))\n        throw new Exception(\"没有在目录里找到产品\");\n    return cartItems;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["cartItems"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"ShoppingCart","MethodName":"setCartItems","MethodSourceCode":"public void setCartItems(List<CartItem> cartItems) {\n    this.cartItems = cartItems;\n}","Folder":"shopping-cart-service"},{"Variables":[{"VariableName":"validCartEventTypes"}],"Methodscalled":[],"Parameters":["cartEvent"],"ASTFeatures":["MethodDeclaration"],"Comments":"\n     * Incorporates a new {@link CartEvent} and update the shopping cart\n     * @param cartEvent 是将要改变购物车状态的{@link CartEvent}\n     * @return 在应用了新的 {@link CartEvent} 后返回 {@link ShoppingCart} 的状态\n     ","ClassName":"ShoppingCart","MethodName":"incorporate","MethodSourceCode":"/**\n * Incorporates a new {@link CartEvent} and update the shopping cart\n * @param cartEvent 是将要改变购物车状态的{@link CartEvent}\n * @return 在应用了新的 {@link CartEvent} 后返回 {@link ShoppingCart} 的状态\n */\npublic ShoppingCart incorporate(CartEvent cartEvent) {\n    Flux<CartEventType> validCartEventTypes = Flux.fromStream(Stream.of(CartEventType.ADD_ITEM, CartEventType.REMOVE_ITEM));\n    // CartEvent类型必须是 ADD_ITEM or REMOVE_ITEM\n    if (validCartEventTypes.exists(cartEventType -> cartEvent.getCartEventType().equals(cartEventType)).get()) {\n        // 根据事件类型更新购物车每个产品的数量的聚合\n        productMap.put(cartEvent.getProductId(), productMap.getOrDefault(cartEvent.getProductId(), 0) + (cartEvent.getQuantity() * (cartEvent.getCartEventType().equals(CartEventType.ADD_ITEM) ? 1 : -1)));\n    }\n    // Return the updated state of the aggregate to the reactive stream's reduce method\n    return this;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["cartEventType"],"ASTFeatures":["MethodDeclaration"],"Comments":"\n     * Determines whether or not the {@link CartEvent} is a terminal event，causing the stream to end while generating an aggregate {@link ShoppingCart}\n     * @param cartEventType is the {@link CartEventType} to evaluate\n     * @return a flag 表示是否事件是terminal\n     ","ClassName":"ShoppingCart","MethodName":"isTerminal","MethodSourceCode":"/**\n * Determines whether or not the {@link CartEvent} is a terminal event，causing the stream to end while generating an aggregate {@link ShoppingCart}\n * @param cartEventType is the {@link CartEventType} to evaluate\n * @return a flag 表示是否事件是terminal\n */\npublic static Boolean isTerminal(CartEventType cartEventType) {\n    return (cartEventType == CartEventType.CLEAR_CART || cartEventType == CartEventType.CHECKOUT);\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"ShoppingCart","MethodName":"getProductMap","MethodSourceCode":"@JsonIgnore\npublic Map<String, Integer> getProductMap() {\n    return productMap;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["productMap"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"ShoppingCart","MethodName":"setProductMap","MethodSourceCode":"public void setProductMap(Map<String, Integer> productMap) {\n    this.productMap = productMap;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"ShoppingCart","MethodName":"getCatalog","MethodSourceCode":"@JsonIgnore\npublic Catalog getCatalog() {\n    return catalog;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["catalog"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"ShoppingCart","MethodName":"setCatalog","MethodSourceCode":"public void setCatalog(Catalog catalog) {\n    this.catalog = catalog;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"ShoppingCart","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"ShoppingCart{\" + \"productMap=\" + productMap + \", cartItems=\" + cartItems + \", catalog=\" + catalog + '}';\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["args"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CartServiceApplication","MethodName":"main","MethodSourceCode":"public static void main(String[] args) {\n    SpringApplication.run(CartServiceApplication.class, args);\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["details","clientContext"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CartServiceApplication","MethodName":"loadBalancedOauth2RestTemplate","MethodSourceCode":"@LoadBalanced\n@Bean\npublic OAuth2RestTemplate loadBalancedOauth2RestTemplate(OAuth2ProtectedResourceDetails details, OAuth2ClientContext clientContext) {\n    return new OAuth2RestTemplate(details, clientContext);\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CartServiceApplication","MethodName":"loadBalancedRestTemplate","MethodSourceCode":"@LoadBalanced\n@Bean(\"loadBalancedRestTemplate\")\npublic RestTemplate loadBalancedRestTemplate() {\n    return new RestTemplate();\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["config"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CartServiceApplication","MethodName":"configureRepositoryRestConfiguration","MethodSourceCode":"@Override\npublic void configureRepositoryRestConfiguration(RepositoryRestConfiguration config) {\n    config.exposeIdsFor(Order.class);\n    config.setBasePath(\"/api\");\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Catalog","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"Catalog{\" + \"id=\" + id + \", name='\" + name + '\\'' + \", products=\" + products + '}';\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Catalog","MethodName":"getId","MethodSourceCode":"public Long getId() {\n    return id;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Catalog","MethodName":"setId","MethodSourceCode":"public void setId(Long id) {\n    this.id = id;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Catalog","MethodName":"getName","MethodSourceCode":"public String getName() {\n    return name;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["name"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Catalog","MethodName":"setName","MethodSourceCode":"public void setName(String name) {\n    this.name = name;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Catalog","MethodName":"getProducts","MethodSourceCode":"public Set<Product> getProducts() {\n    return products;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["products"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Catalog","MethodName":"setProducts","MethodSourceCode":"public void setProducts(Set<Product> products) {\n    this.products = products;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BaseEntity","MethodName":"getLastModified","MethodSourceCode":"public Long getLastModified() {\n    return lastModified;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["lastModified"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BaseEntity","MethodName":"setLastModified","MethodSourceCode":"public void setLastModified(Long lastModified) {\n    this.lastModified = lastModified;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BaseEntity","MethodName":"getCreatedAt","MethodSourceCode":"public Long getCreatedAt() {\n    return createdAt;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["createdAt"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BaseEntity","MethodName":"setCreatedAt","MethodSourceCode":"public void setCreatedAt(Long createdAt) {\n    this.createdAt = createdAt;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BaseEntity","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"BaseEntity{\" + \"lastModified=\" + lastModified + \", createdAt=\" + createdAt + '}';\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BaseEntityDto","MethodName":"getLastModified","MethodSourceCode":"@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\")\npublic Date getLastModified() {\n    return lastModified;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["lastModified"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BaseEntityDto","MethodName":"setLastModified","MethodSourceCode":"public void setLastModified(Date lastModified) {\n    this.lastModified = lastModified;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BaseEntityDto","MethodName":"getCreatedAt","MethodSourceCode":"@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\")\npublic Date getCreatedAt() {\n    return createdAt;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["createdAt"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BaseEntityDto","MethodName":"setCreatedAt","MethodSourceCode":"public void setCreatedAt(Date createdAt) {\n    this.createdAt = createdAt;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BaseEntityDto","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"BaseEntity{\" + \"createdAt=\" + createdAt + \", lastModified=\" + lastModified + '}';\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Inventory","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"Inventory{\" + \"id=\" + id + \", inventoryNumber='\" + inventoryNumber + '\\'' + \", product=\" + product + \", warehouse=\" + warehouse + \", status=\" + status + '}';\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Inventory","MethodName":"getId","MethodSourceCode":"public Long getId() {\n    return id;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Inventory","MethodName":"setId","MethodSourceCode":"public void setId(Long id) {\n    this.id = id;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Inventory","MethodName":"getInventoryNumber","MethodSourceCode":"public String getInventoryNumber() {\n    return inventoryNumber;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["inventoryNumber"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Inventory","MethodName":"setInventoryNumber","MethodSourceCode":"public void setInventoryNumber(String inventoryNumber) {\n    this.inventoryNumber = inventoryNumber;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Inventory","MethodName":"getProduct","MethodSourceCode":"public Product getProduct() {\n    return product;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["product"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Inventory","MethodName":"setProduct","MethodSourceCode":"public void setProduct(Product product) {\n    this.product = product;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Inventory","MethodName":"getWarehouse","MethodSourceCode":"public Warehouse getWarehouse() {\n    return warehouse;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["warehouse"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Inventory","MethodName":"setWarehouse","MethodSourceCode":"public void setWarehouse(Warehouse warehouse) {\n    this.warehouse = warehouse;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Inventory","MethodName":"getStatus","MethodSourceCode":"public InventoryStatus getStatus() {\n    return status;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["status"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Inventory","MethodName":"setStatus","MethodSourceCode":"public void setStatus(InventoryStatus status) {\n    this.status = status;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Order","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"Order{\" + \"orderId='\" + orderId + '\\'' + \", accountNumber='\" + accountNumber + '\\'' + \", orderStatus=\" + orderStatus + \", lineItems=\" + lineItems + \", shippingAddress=\" + shippingAddress + '}';\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Order","MethodName":"getOrderId","MethodSourceCode":"public String getOrderId() {\n    return orderId;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["orderId"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Order","MethodName":"setOrderId","MethodSourceCode":"public void setOrderId(String orderId) {\n    this.orderId = orderId;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Order","MethodName":"getAccountNumber","MethodSourceCode":"public String getAccountNumber() {\n    return accountNumber;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["accountNumber"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Order","MethodName":"setAccountNumber","MethodSourceCode":"public void setAccountNumber(String accountNumber) {\n    this.accountNumber = accountNumber;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Order","MethodName":"getOrderStatus","MethodSourceCode":"public OrderStatus getOrderStatus() {\n    return orderStatus;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["orderStatus"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Order","MethodName":"setOrderStatus","MethodSourceCode":"public void setOrderStatus(OrderStatus orderStatus) {\n    this.orderStatus = orderStatus;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Order","MethodName":"getLineItems","MethodSourceCode":"public List<OrderItem> getLineItems() {\n    return lineItems;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["lineItems"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Order","MethodName":"setLineItems","MethodSourceCode":"public void setLineItems(List<OrderItem> lineItems) {\n    this.lineItems = lineItems;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Order","MethodName":"getShippingAddress","MethodSourceCode":"public Address getShippingAddress() {\n    return shippingAddress;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["shippingAddress"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Order","MethodName":"setShippingAddress","MethodSourceCode":"public void setShippingAddress(Address shippingAddress) {\n    this.shippingAddress = shippingAddress;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderEvent","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"OrderEvent{\" + \"id='\" + id + '\\'' + \", type=\" + type + \", orderId='\" + orderId + '\\'' + '}';\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderEvent","MethodName":"getId","MethodSourceCode":"public String getId() {\n    return id;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderEvent","MethodName":"setId","MethodSourceCode":"public void setId(String id) {\n    this.id = id;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderEvent","MethodName":"getType","MethodSourceCode":"public OrderEventType getType() {\n    return type;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["type"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderEvent","MethodName":"setType","MethodSourceCode":"public void setType(OrderEventType type) {\n    this.type = type;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderEvent","MethodName":"getOrderId","MethodSourceCode":"public String getOrderId() {\n    return orderId;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["orderId"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderEvent","MethodName":"setOrderId","MethodSourceCode":"public void setOrderId(String orderId) {\n    this.orderId = orderId;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderItem","MethodName":"getName","MethodSourceCode":"public String getName() {\n    return name;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["name"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderItem","MethodName":"setName","MethodSourceCode":"public void setName(String name) {\n    this.name = name;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderItem","MethodName":"getProductId","MethodSourceCode":"public String getProductId() {\n    return productId;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["productId"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderItem","MethodName":"setProductId","MethodSourceCode":"public void setProductId(String productId) {\n    this.productId = productId;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderItem","MethodName":"getQuantity","MethodSourceCode":"public Integer getQuantity() {\n    return quantity;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["quantity"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderItem","MethodName":"setQuantity","MethodSourceCode":"public void setQuantity(Integer quantity) {\n    this.quantity = quantity;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderItem","MethodName":"getPrice","MethodSourceCode":"public Double getPrice() {\n    return price;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["price"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderItem","MethodName":"setPrice","MethodSourceCode":"public void setPrice(Double price) {\n    this.price = price;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderItem","MethodName":"getTax","MethodSourceCode":"public Double getTax() {\n    return tax;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["tax"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"OrderItem","MethodName":"setTax","MethodSourceCode":"public void setTax(Double tax) {\n    this.tax = tax;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"Product{\" + \"id=\" + id + \", name='\" + name + '\\'' + \", productId='\" + productId + '\\'' + \", description='\" + description + '\\'' + \", unitPrice=\" + unitPrice + '}';\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"getId","MethodSourceCode":"public Long getId() {\n    return id;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"setId","MethodSourceCode":"public void setId(Long id) {\n    this.id = id;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"getName","MethodSourceCode":"public String getName() {\n    return name;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["name"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"setName","MethodSourceCode":"public void setName(String name) {\n    this.name = name;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"getProductId","MethodSourceCode":"public String getProductId() {\n    return productId;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["productId"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"setProductId","MethodSourceCode":"public void setProductId(String productId) {\n    this.productId = productId;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"getDescription","MethodSourceCode":"public String getDescription() {\n    return description;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["description"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"setDescription","MethodSourceCode":"public void setDescription(String description) {\n    this.description = description;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"getUnitPrice","MethodSourceCode":"public Double getUnitPrice() {\n    return unitPrice;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["unitPrice"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Product","MethodName":"setUnitPrice","MethodSourceCode":"public void setUnitPrice(Double unitPrice) {\n    this.unitPrice = unitPrice;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"getId","MethodSourceCode":"public Long getId() {\n    return id;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"setId","MethodSourceCode":"public void setId(Long id) {\n    this.id = id;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"getUsername","MethodSourceCode":"public String getUsername() {\n    return username;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["username"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"setUsername","MethodSourceCode":"public void setUsername(String username) {\n    this.username = username;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"getFirstName","MethodSourceCode":"public String getFirstName() {\n    return firstName;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["firstName"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"setFirstName","MethodSourceCode":"public void setFirstName(String firstName) {\n    this.firstName = firstName;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"getLastName","MethodSourceCode":"public String getLastName() {\n    return lastName;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["lastName"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"setLastName","MethodSourceCode":"public void setLastName(String lastName) {\n    this.lastName = lastName;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"User{\" + \"id=\" + id + \", username='\" + username + '\\'' + \", firstName='\" + firstName + '\\'' + \", lastName='\" + lastName + '\\'' + '}';\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Warehouse","MethodName":"getId","MethodSourceCode":"public Long getId() {\n    return id;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Warehouse","MethodName":"setId","MethodSourceCode":"public void setId(Long id) {\n    this.id = id;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Warehouse","MethodName":"getName","MethodSourceCode":"public String getName() {\n    return name;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["name"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Warehouse","MethodName":"setName","MethodSourceCode":"public void setName(String name) {\n    this.name = name;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Warehouse","MethodName":"getAddress","MethodSourceCode":"public Address getAddress() {\n    return address;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":["address"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Warehouse","MethodName":"setAddress","MethodSourceCode":"public void setAddress(Address address) {\n    this.address = address;\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"Warehouse","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"Warehouse{\" + \"id=\" + id + \", name='\" + name + '\\'' + \", address=\" + address + '}';\n}","Folder":"shopping-cart-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"ShoppingCartServiceV1Test","MethodName":"checkOut","MethodSourceCode":"@Test\npublic void checkOut() throws Exception {\n    /* Inventory[] inventory = new Inventory[2];\n        Product product1 = new Product();\n        Product product2 = new Product();\n\n        Map<String, Long> inventoryItems = Arrays.stream(inventory)\n                .map(inv -> inv.getProduct().getProductId())\n                .collect(groupingBy(Function.identity(), counting()));*/\n}","Folder":"shopping-cart-service"},{"Variables":[{"VariableName":"user"}],"Methodscalled":[],"Parameters":["principal"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"UserControllerV1","MethodName":"me","MethodSourceCode":"@RequestMapping(path = \"/me\")\npublic ResponseEntity<User> me(Principal principal) {\n    User user = null;\n    if (principal != null) {\n        user = userService.getUserByUsername(principal.getName());\n    }\n    return Optional.ofNullable(user).map(a -> new ResponseEntity<>(a, HttpStatus.OK)).orElseThrow(() -> new UsernameNotFoundException(\"Username not found\"));\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[],"Parameters":["username"],"ASTFeatures":["MethodDeclaration"],"Comments":"@Cacheable(value = \"user\", key = \"#username\") // Cannot get Jedis connection ?","ClassName":"UserServiceV1","MethodName":"getUserByUsername","MethodSourceCode":"// @Cacheable(value = \"user\", key = \"#username\") // Cannot get Jedis connection ?\n@HystrixCommand\npublic User getUserByUsername(String username) {\n    return userRepository.findUserByUsername(username);\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[],"Parameters":["authManagerBuilder"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"AuthorizationServerConfig","MethodName":"configureGlobal","MethodSourceCode":"@Autowired\npublic void configureGlobal(AuthenticationManagerBuilder authManagerBuilder) throws Exception {\n    authManagerBuilder.inMemoryAuthentication().withUser(\"user\").password(\"password\").roles(\"USER\").and().withUser(\"admin\").password(\"password\").roles(\"ADMIN\", \"USER\");\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[],"Parameters":["http"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"AuthorizationServerConfig","MethodName":"configure","MethodSourceCode":"/* @Autowired\n    public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {\n        auth\n                .jdbcAuthentication()\n                .dataSource(dataSource)\n                .withDefaultSchema()\n                .withUser(\"user\").password(\"password\").roles(\"USER\").and()\n                .withUser(\"admin\").password(\"password\").roles(\"USER\", \"ADMIN\");\n    }*/\n@Override\nprotected void configure(HttpSecurity http) throws Exception {\n    http.authorizeRequests().antMatchers(\"/assets*/**\").permitAll().anyRequest().authenticated().and().formLogin().loginPage(\"/login\").permitAll().and().logout().permitAll().and().csrf().disable();\n    // .and().csrf().csrfTokenRepository(CookieCsrfTokenRepository.withHttpOnlyFalse()); // 使用angularjs并且开启csrf保护的话就需要配置该行代码。需要注意withHttpOnlyFalse后容易受到XSS攻击\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[],"Parameters":["clients"],"ASTFeatures":["MethodDeclaration"],"Comments":"\n         * 也可以放在application.yml配置文件里面\n         *\n         * security:\n             oauth2:\n                 client:\n                     client-id: timeyang\n                     client-secret: timeyangsecret\n                     scope: read,write\n                     auto-approve-scopes: '.*'\n         *\n         * @param clients\n         * @throws Exception\n         ","ClassName":"AuthorizationServerConfig","MethodName":"configure","MethodSourceCode":"/**\n * 也可以放在application.yml配置文件里面\n *\n * security:\n *             oauth2:\n *                 client:\n *                     client-id: timeyang\n *                     client-secret: timeyangsecret\n *                     scope: read,write\n *                     auto-approve-scopes: '.*'\n *\n * @param clients\n * @throws Exception\n */\n@Override\npublic void configure(ClientDetailsServiceConfigurer clients) throws Exception {\n    clients.inMemory().withClient(\"timeyang\").secret(\"timeyangsecret\").authorizedGrantTypes(\"authorization_code\", \"refresh_token\", \"password\").scopes(\"openid\");\n}","Folder":"user-service"},{"Variables":[{"VariableName":"redisConnectionFactory"}],"Methodscalled":[],"Parameters":["redisHost","redisPort"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CacheConfig","MethodName":"redisConnectionFactory","MethodSourceCode":"@Bean\npublic JedisConnectionFactory redisConnectionFactory(@Value(\"${spring.redis.host}\") String redisHost, @Value(\"${spring.redis.port}\") Integer redisPort) {\n    JedisConnectionFactory redisConnectionFactory = new JedisConnectionFactory();\n    redisConnectionFactory.setHostName(redisHost);\n    redisConnectionFactory.setPort(redisPort);\n    return redisConnectionFactory;\n}","Folder":"user-service"},{"Variables":[{"VariableName":"redisTemplate"}],"Methodscalled":[],"Parameters":["factory"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CacheConfig","MethodName":"redisTemplate","MethodSourceCode":"@Bean\npublic RedisTemplate redisTemplate(RedisConnectionFactory factory) {\n    RedisTemplate redisTemplate = new RedisTemplate();\n    redisTemplate.setConnectionFactory(factory);\n    return redisTemplate;\n}","Folder":"user-service"},{"Variables":[{"VariableName":"cacheManager"}],"Methodscalled":[],"Parameters":["redisTemplate"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"CacheConfig","MethodName":"cacheManager","MethodSourceCode":"@Bean\npublic CacheManager cacheManager(RedisTemplate redisTemplate) {\n    RedisCacheManager cacheManager = new RedisCacheManager((redisTemplate));\n    // 10000s后过期\n    cacheManager.setDefaultExpiration(10000);\n    return cacheManager;\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[],"Parameters":["http"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"ResourceServerConfig","MethodName":"configure","MethodSourceCode":"@Override\npublic void configure(HttpSecurity http) throws Exception {\n    http.authorizeRequests().antMatchers(\"/assets/**\", \"/login\").permitAll().anyRequest().authenticated();\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"ResourceServerConfig","MethodName":"contextRepository","MethodSourceCode":"@Bean\npublic HttpSessionSecurityContextRepository contextRepository() {\n    return new HttpSessionSecurityContextRepository();\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[],"Parameters":["registry"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"WebMvcConfig","MethodName":"addViewControllers","MethodSourceCode":"@Override\npublic void addViewControllers(ViewControllerRegistry registry) {\n    registry.addViewController(\"/login\").setViewName(\"login\");\n    registry.addViewController(\"/oauth/confirm_access\").setViewName(\"authorize\");\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BaseEntity","MethodName":"getCreatedAt","MethodSourceCode":"public Long getCreatedAt() {\n    return createdAt;\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[],"Parameters":["createdAt"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BaseEntity","MethodName":"setCreatedAt","MethodSourceCode":"public void setCreatedAt(Long createdAt) {\n    this.createdAt = createdAt;\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BaseEntity","MethodName":"getLastModified","MethodSourceCode":"public Long getLastModified() {\n    return lastModified;\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[],"Parameters":["lastModified"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BaseEntity","MethodName":"setLastModified","MethodSourceCode":"public void setLastModified(Long lastModified) {\n    this.lastModified = lastModified;\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"BaseEntity","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"BaseEntity{\" + \"createdAt=\" + createdAt + \", lastModified=\" + lastModified + '}';\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"LoginController","MethodName":"login","MethodSourceCode":"@RequestMapping(value = \"/login\", method = RequestMethod.GET)\npublic String login() {\n    return \"login\";\n}","Folder":"user-service"},{"Variables":[{"VariableName":"holder"},{"VariableName":"authorities"},{"VariableName":"auth"},{"VariableName":"defaultSavedRequest"},{"VariableName":"authParams"},{"VariableName":"authRequest"}],"Methodscalled":[{"MethodCalled":"getAuthParameters"}],"Parameters":["request","response","model"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"LoginController","MethodName":"login","MethodSourceCode":"@RequestMapping(value = \"/login\", method = RequestMethod.POST)\npublic String login(HttpServletRequest request, HttpServletResponse response, Model model) {\n    HttpRequestResponseHolder holder = new HttpRequestResponseHolder(request, response);\n    httpSessionSecurityContextRepository.loadContext(holder);\n    try {\n        // 使用提供的证书认证用户\n        List<GrantedAuthority> authorities = AuthorityUtils.createAuthorityList(\"ROLE_USER\", \"ROLE_ADMIN\");\n        Authentication auth = new UsernamePasswordAuthenticationToken(request.getParameter(\"username\"), request.getParameter(\"password\"), authorities);\n        SecurityContextHolder.getContext().setAuthentication(authenticationManager.authenticate(auth));\n        // 认证用户\n        if (!auth.isAuthenticated())\n            throw new CredentialException(\"用户不能够被认证\");\n    } catch (Exception ex) {\n        // 用户不能够被认证，重定向回登录页\n        logger.info(ex);\n        return \"login\";\n    }\n    // 从会话得到默认保存的请求\n    DefaultSavedRequest defaultSavedRequest = (DefaultSavedRequest) request.getSession().getAttribute(\"SPRING_SECURITY_SAVED_REQUEST\");\n    // 为令牌请求生成认证参数Map\n    Map<String, String> authParams = getAuthParameters(defaultSavedRequest);\n    AuthorizationRequest authRequest = new DefaultOAuth2RequestFactory(clientDetailsService).createAuthorizationRequest(authParams);\n    authRequest.setAuthorities(AuthorityUtils.createAuthorityList(\"ROLE_USER\", \"ROLE_ADMIN\"));\n    model.addAttribute(\"authorizationRequest\", authRequest);\n    httpSessionSecurityContextRepository.saveContext(SecurityContextHolder.getContext(), holder.getRequest(), holder.getResponse());\n    return \"authorize\";\n}","Folder":"user-service"},{"Variables":[{"VariableName":"authParams"}],"Methodscalled":[],"Parameters":["defaultSavedRequest"],"ASTFeatures":["MethodDeclaration"],"Comments":"\n     * 为会话的令牌请求生成认证参数Map\n     * @param defaultSavedRequest 会话中默认保存的SPRING_SECURITY_SAVED_REQUEST请求\n     * @return 包含OAuth2请求明细的参数Map\n     ","ClassName":"LoginController","MethodName":"getAuthParameters","MethodSourceCode":"/**\n * 为会话的令牌请求生成认证参数Map\n * @param defaultSavedRequest 会话中默认保存的SPRING_SECURITY_SAVED_REQUEST请求\n * @return 包含OAuth2请求明细的参数Map\n */\nprivate Map<String, String> getAuthParameters(DefaultSavedRequest defaultSavedRequest) {\n    Map<String, String> authParams = new HashMap<>();\n    authParams.put(OAuth2Utils.CLIENT_ID, defaultSavedRequest.getParameterMap().get(OAuth2Utils.CLIENT_ID)[0]);\n    authParams.put(OAuth2Utils.REDIRECT_URI, defaultSavedRequest.getParameterMap().get(OAuth2Utils.REDIRECT_URI)[0]);\n    if (defaultSavedRequest.getParameterMap().get(OAuth2Utils.STATE) != null) {\n        authParams.put(OAuth2Utils.STATE, defaultSavedRequest.getParameterMap().get(OAuth2Utils.STATE)[0]);\n    }\n    authParams.put(OAuth2Utils.RESPONSE_TYPE, \"code\");\n    authParams.put(OAuth2Utils.USER_OAUTH_APPROVAL, \"true\");\n    authParams.put(OAuth2Utils.GRANT_TYPE, \"authorization_code\");\n    return authParams;\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"getId","MethodSourceCode":"public Long getId() {\n    return id;\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"setId","MethodSourceCode":"public void setId(Long id) {\n    this.id = id;\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"getUsername","MethodSourceCode":"public String getUsername() {\n    return username;\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[],"Parameters":["username"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"setUsername","MethodSourceCode":"public void setUsername(String username) {\n    this.username = username;\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"getFirstName","MethodSourceCode":"public String getFirstName() {\n    return firstName;\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[],"Parameters":["firstName"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"setFirstName","MethodSourceCode":"public void setFirstName(String firstName) {\n    this.firstName = firstName;\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"getLastName","MethodSourceCode":"public String getLastName() {\n    return lastName;\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[],"Parameters":["lastName"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"setLastName","MethodSourceCode":"public void setLastName(String lastName) {\n    this.lastName = lastName;\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"getEmail","MethodSourceCode":"public String getEmail() {\n    return email;\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[],"Parameters":["email"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"setEmail","MethodSourceCode":"public void setEmail(String email) {\n    this.email = email;\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[],"Parameters":[],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"User","MethodName":"toString","MethodSourceCode":"@Override\npublic String toString() {\n    return \"User{\" + \"id=\" + id + \", username='\" + username + '\\'' + \", firstName='\" + firstName + '\\'' + \", lastName='\" + lastName + '\\'' + \", email='\" + email + '\\'' + '}';\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[],"Parameters":["user"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"UserController","MethodName":"user","MethodSourceCode":"@RequestMapping(\"/user\")\npublic Principal user(Principal user) {\n    return user;\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[{"MethodCalled":"createUser"}],"Parameters":["user"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"UserController","MethodName":"createUser","MethodSourceCode":"@RequestMapping(path = \"/users\", method = RequestMethod.POST, name = \"createUser\")\npublic ResponseEntity<User> createUser(@RequestBody User user) {\n    Assert.notNull(user);\n    return Optional.ofNullable(userService.createUser(user)).map(result -> new ResponseEntity<>(result, HttpStatus.CREATED)).orElse(new ResponseEntity<>(HttpStatus.CONFLICT));\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"UserController","MethodName":"getUser","MethodSourceCode":"@RequestMapping(path = \"users/{id}\", method = RequestMethod.GET, name = \"getUser\")\npublic ResponseEntity<User> getUser(@PathVariable(\"id\") Long id) {\n    return Optional.ofNullable(userService.getUserById(id)).map(result -> new ResponseEntity<>(result, HttpStatus.OK)).orElse(new ResponseEntity<>(HttpStatus.NOT_FOUND));\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[{"MethodCalled":"updateUser"}],"Parameters":["id","user"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"UserController","MethodName":"updateUser","MethodSourceCode":"@RequestMapping(path = \"users/{id}\", method = RequestMethod.PUT, name = \"updateUser\")\npublic ResponseEntity<User> updateUser(@PathVariable(value = \"id\") Long id, @RequestBody User user) {\n    Assert.notNull(user);\n    user.setId(id);\n    return Optional.ofNullable(userService.updateUser(id, user)).map(result -> new ResponseEntity<>(result, HttpStatus.OK)).orElse(new ResponseEntity<>(HttpStatus.NOT_FOUND));\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[{"MethodCalled":"deleteUser"}],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"UserController","MethodName":"deleteUser","MethodSourceCode":"@RequestMapping(path = \"users/{id}\", method = RequestMethod.DELETE, name = \"deleteUser\")\npublic ResponseEntity deleteUser(@PathVariable(\"id\") Long id) {\n    return Optional.ofNullable(userService.deleteUser(id)).map(result -> new ResponseEntity<>(result, HttpStatus.NO_CONTENT)).orElse(new ResponseEntity<Boolean>(HttpStatus.NOT_FOUND));\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[],"Parameters":["username"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"UserRepository","MethodName":"findUserByUsername","MethodSourceCode":"User findUserByUsername(@Param(\"username\") String username);","Folder":"user-service"},{"Variables":[{"VariableName":"result"}],"Methodscalled":[],"Parameters":["user"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"UserService","MethodName":"createUser","MethodSourceCode":"@CacheEvict(value = \"user\", key = \"#user.getId()\")\npublic User createUser(User user) {\n    User result = null;\n    if (!userRepository.exists(user.getId())) {\n        result = userRepository.save(user);\n    }\n    return result;\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"UserService","MethodName":"getUserById","MethodSourceCode":"@Cacheable(value = \"user\", key = \"#id\")\npublic User getUserById(Long id) {\n    return userRepository.findOne(id);\n}","Folder":"user-service"},{"Variables":[{"VariableName":"result"}],"Methodscalled":[],"Parameters":["id","user"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"UserService","MethodName":"updateUser","MethodSourceCode":"@CachePut(value = \"user\", key = \"#id\")\npublic User updateUser(Long id, User user) {\n    User result = null;\n    if (userRepository.exists(user.getId())) {\n        result = userRepository.save(user);\n    }\n    return result;\n}","Folder":"user-service"},{"Variables":[{"VariableName":"deleted"}],"Methodscalled":[],"Parameters":["id"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"UserService","MethodName":"deleteUser","MethodSourceCode":"@CacheEvict(value = \"user\", key = \"#id\")\npublic boolean deleteUser(Long id) {\n    boolean deleted = false;\n    if (userRepository.exists(id)) {\n        userRepository.delete(id);\n        deleted = true;\n    }\n    return deleted;\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[],"Parameters":["args"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"UserServiceApplication","MethodName":"main","MethodSourceCode":"public static void main(String[] args) {\n    SpringApplication.run(UserServiceApplication.class, args);\n}","Folder":"user-service"},{"Variables":[],"Methodscalled":[],"Parameters":["config"],"ASTFeatures":["MethodDeclaration"],"Comments":"","ClassName":"UserServiceApplication","MethodName":"configureRepositoryRestConfiguration","MethodSourceCode":"@Override\npublic void configureRepositoryRestConfiguration(RepositoryRestConfiguration config) {\n    config.setBasePath(\"/api\");\n}","Folder":"user-service"}]}